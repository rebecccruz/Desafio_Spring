memberSearchIndex = [{"p":"com.github.transformeli.desafiospring.exception","c":"ApiException","l":"ApiException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.github.transformeli.desafiospring.exception","c":"ApiExceptionDTO","l":"ApiExceptionDTO()","u":"%3Cinit%3E()"},{"p":"com.github.transformeli.desafiospring.handler","c":"ApiExHandler","l":"ApiExHandler()","u":"%3Cinit%3E()"},{"p":"com.github.transformeli.desafiospring.model","c":"Ticket","l":"articles"},{"p":"com.github.transformeli.desafiospring.controller","c":"ArticlesController","l":"ArticlesController()","u":"%3Cinit%3E()"},{"p":"com.github.transformeli.desafiospring.enums","c":"ParamOrderEnum","l":"ASCENDING_ALPHA"},{"p":"com.github.transformeli.desafiospring.exception","c":"BadRequestException","l":"BadRequestException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.github.transformeli.desafiospring.model","c":"Product","l":"brand"},{"p":"com.github.transformeli.desafiospring.model","c":"Product","l":"category"},{"p":"com.github.transformeli.desafiospring.model","c":"Client","l":"Client()","u":"%3Cinit%3E()"},{"p":"com.github.transformeli.desafiospring.controller","c":"ClientController","l":"ClientController()","u":"%3Cinit%3E()"},{"p":"com.github.transformeli.desafiospring.dto","c":"ClientDTO","l":"ClientDTO(Client)","u":"%3Cinit%3E(com.github.transformeli.desafiospring.model.Client)"},{"p":"com.github.transformeli.desafiospring.exception","c":"ClientExistsException","l":"ClientExistsException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.github.transformeli.desafiospring.repository","c":"ClientRepository","l":"ClientRepository()","u":"%3Cinit%3E()"},{"p":"com.github.transformeli.desafiospring.service","c":"ClientService","l":"ClientService()","u":"%3Cinit%3E()"},{"p":"com.github.transformeli.desafiospring","c":"DesafioSpringApplicationTests","l":"contextLoads()"},{"p":"com.github.transformeli.desafiospring.dto","c":"ClientDTO","l":"country"},{"p":"com.github.transformeli.desafiospring.model","c":"Client","l":"country"},{"p":"com.github.transformeli.desafiospring.model","c":"Client","l":"cpf"},{"p":"com.github.transformeli.desafiospring.helper","c":"CPFDocument","l":"CPFDocument()","u":"%3Cinit%3E()"},{"p":"com.github.transformeli.desafiospring.controller","c":"ArticlesController","l":"createArticles(List<Product>)","u":"createArticles(java.util.List)"},{"p":"com.github.transformeli.desafiospring.controller","c":"ClientController","l":"createClient(Client)","u":"createClient(com.github.transformeli.desafiospring.model.Client)"},{"p":"com.github.transformeli.desafiospring","c":"DesafioSpringApplication","l":"DesafioSpringApplication()","u":"%3Cinit%3E()"},{"p":"com.github.transformeli.desafiospring","c":"DesafioSpringApplicationTests","l":"DesafioSpringApplicationTests()","u":"%3Cinit%3E()"},{"p":"com.github.transformeli.desafiospring.enums","c":"ParamOrderEnum","l":"DESCENDING_ALPHA"},{"p":"com.github.transformeli.desafiospring.model","c":"Product","l":"freeShipping"},{"p":"com.github.transformeli.desafiospring.service","c":"IProductService","l":"getAllArticles(List<Product>)","u":"getAllArticles(java.util.List)"},{"p":"com.github.transformeli.desafiospring.service","c":"ProductService","l":"getAllArticles(List<Product>)","u":"getAllArticles(java.util.List)"},{"p":"com.github.transformeli.desafiospring.service","c":"IProductService","l":"getAllByOrder(ParamOrderEnum, List<Product>)","u":"getAllByOrder(com.github.transformeli.desafiospring.enums.ParamOrderEnum,java.util.List)"},{"p":"com.github.transformeli.desafiospring.service","c":"ProductService","l":"getAllByOrder(ParamOrderEnum, List<Product>)","u":"getAllByOrder(com.github.transformeli.desafiospring.enums.ParamOrderEnum,java.util.List)"},{"p":"com.github.transformeli.desafiospring.controller","c":"ClientController","l":"getAllClients()"},{"p":"com.github.transformeli.desafiospring.repository","c":"ClientRepository","l":"getAllClients()"},{"p":"com.github.transformeli.desafiospring.service","c":"ClientService","l":"getAllClients()"},{"p":"com.github.transformeli.desafiospring.service","c":"IClientService","l":"getAllClients()"},{"p":"com.github.transformeli.desafiospring.repository","c":"ProductRepository","l":"getAllProducts()"},{"p":"com.github.transformeli.desafiospring.service","c":"IProductService","l":"getAllProducts()"},{"p":"com.github.transformeli.desafiospring.service","c":"ProductService","l":"getAllProducts()"},{"p":"com.github.transformeli.desafiospring.controller","c":"ArticlesController","l":"getArticles(Optional<String>, Optional<String>, Optional<String>, Optional<String>, Optional<String>)","u":"getArticles(java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)"},{"p":"com.github.transformeli.desafiospring.controller","c":"ClientController","l":"getByState(String)","u":"getByState(java.lang.String)"},{"p":"com.github.transformeli.desafiospring.repository","c":"ClientRepository","l":"getByState(String)","u":"getByState(java.lang.String)"},{"p":"com.github.transformeli.desafiospring.service","c":"ClientService","l":"getClientByCPF(Client)","u":"getClientByCPF(com.github.transformeli.desafiospring.model.Client)"},{"p":"com.github.transformeli.desafiospring.service","c":"ClientService","l":"getClientsByState(String)","u":"getClientsByState(java.lang.String)"},{"p":"com.github.transformeli.desafiospring.service","c":"IClientService","l":"getClientsByState(String)","u":"getClientsByState(java.lang.String)"},{"p":"com.github.transformeli.desafiospring.exception","c":"ApiException","l":"getDTO()"},{"p":"com.github.transformeli.desafiospring.service","c":"ClientService","l":"getNewClientID()"},{"p":"com.github.transformeli.desafiospring.helper","c":"CPFDocument","l":"getNumberOnlyCPF(String)","u":"getNumberOnlyCPF(java.lang.String)"},{"p":"com.github.transformeli.desafiospring.service","c":"IProductService","l":"getProductsByFilter(Optional<String>, Optional<String>, Optional<Boolean>, Optional<String>, Optional<Integer>)","u":"getProductsByFilter(java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)"},{"p":"com.github.transformeli.desafiospring.service","c":"ProductService","l":"getProductsByFilter(Optional<String>, Optional<String>, Optional<Boolean>, Optional<String>, Optional<Integer>)","u":"getProductsByFilter(java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)"},{"p":"com.github.transformeli.desafiospring.service","c":"ProductService","l":"getProductsFilterByBrand(List<Product>, String)","u":"getProductsFilterByBrand(java.util.List,java.lang.String)"},{"p":"com.github.transformeli.desafiospring.service","c":"ProductService","l":"getProductsFilterByCategory(List<Product>, String)","u":"getProductsFilterByCategory(java.util.List,java.lang.String)"},{"p":"com.github.transformeli.desafiospring.service","c":"ProductService","l":"getProductsFilterByFreeShipping(List<Product>, Boolean)","u":"getProductsFilterByFreeShipping(java.util.List,java.lang.Boolean)"},{"p":"com.github.transformeli.desafiospring.service","c":"ProductService","l":"getProductsFilterByPrestige(List<Product>, String)","u":"getProductsFilterByPrestige(java.util.List,java.lang.String)"},{"p":"com.github.transformeli.desafiospring.handler","c":"ApiExHandler","l":"handlerApiException(ApiException)","u":"handlerApiException(com.github.transformeli.desafiospring.exception.ApiException)"},{"p":"com.github.transformeli.desafiospring.enums","c":"ParamOrderEnum","l":"HIGHER_PRICE"},{"p":"com.github.transformeli.desafiospring.dto","c":"ClientDTO","l":"id"},{"p":"com.github.transformeli.desafiospring.model","c":"Client","l":"id"},{"p":"com.github.transformeli.desafiospring.model","c":"Ticket","l":"id"},{"p":"com.github.transformeli.desafiospring.exception","c":"InternalServerException","l":"InternalServerException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.github.transformeli.desafiospring.exception","c":"InvalidClientParamException","l":"InvalidClientParamException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.github.transformeli.desafiospring.helper","c":"CPFDocument","l":"isValideCPF(String)","u":"isValideCPF(java.lang.String)"},{"p":"com.github.transformeli.desafiospring.repository","c":"ClientRepository","l":"linkFile"},{"p":"com.github.transformeli.desafiospring.repository","c":"ProductRepository","l":"linkFile"},{"p":"com.github.transformeli.desafiospring.enums","c":"ParamOrderEnum","l":"LOWER_PRICE"},{"p":"com.github.transformeli.desafiospring","c":"DesafioSpringApplication","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"com.github.transformeli.desafiospring.exception","c":"ApiExceptionDTO","l":"message"},{"p":"com.github.transformeli.desafiospring.exception","c":"ApiException","l":"messageData"},{"p":"com.github.transformeli.desafiospring.dto","c":"ClientDTO","l":"name"},{"p":"com.github.transformeli.desafiospring.dto","c":"ProductDTO","l":"name"},{"p":"com.github.transformeli.desafiospring.enums","c":"ParamOrderEnum","l":"name"},{"p":"com.github.transformeli.desafiospring.model","c":"Client","l":"name"},{"p":"com.github.transformeli.desafiospring.model","c":"Product","l":"name"},{"p":"com.github.transformeli.desafiospring.exception","c":"NotFoundException","l":"NotFoundException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.github.transformeli.desafiospring.enums","c":"ParamOrderEnum","l":"ParamOrderEnum(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.github.transformeli.desafiospring.exception","c":"PreConditionFailedException","l":"PreConditionFailedException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.github.transformeli.desafiospring.model","c":"Product","l":"prestige"},{"p":"com.github.transformeli.desafiospring.model","c":"Product","l":"price"},{"p":"com.github.transformeli.desafiospring.controller","c":"PurchaseController","l":"processPurchase(List<PurchaseRequest>)","u":"processPurchase(java.util.List)"},{"p":"com.github.transformeli.desafiospring.service","c":"IPurchaseService","l":"processPurchase(List<PurchaseRequest>)","u":"processPurchase(java.util.List)"},{"p":"com.github.transformeli.desafiospring.service","c":"PurchaseService","l":"processPurchase(List<PurchaseRequest>)","u":"processPurchase(java.util.List)"},{"p":"com.github.transformeli.desafiospring.model","c":"Product","l":"Product()","u":"%3Cinit%3E()"},{"p":"com.github.transformeli.desafiospring.dto","c":"ProductDTO","l":"ProductDTO(Product)","u":"%3Cinit%3E(com.github.transformeli.desafiospring.model.Product)"},{"p":"com.github.transformeli.desafiospring.dto","c":"ProductDTO","l":"productId"},{"p":"com.github.transformeli.desafiospring.model","c":"Product","l":"productId"},{"p":"com.github.transformeli.desafiospring.model","c":"PurchaseRequest","l":"productId"},{"p":"com.github.transformeli.desafiospring.service","c":"PurchaseService","l":"productRepository"},{"p":"com.github.transformeli.desafiospring.repository","c":"ProductRepository","l":"ProductRepository()","u":"%3Cinit%3E()"},{"p":"com.github.transformeli.desafiospring.service","c":"ProductService","l":"ProductService()","u":"%3Cinit%3E()"},{"p":"com.github.transformeli.desafiospring.controller","c":"PurchaseController","l":"PurchaseController()","u":"%3Cinit%3E()"},{"p":"com.github.transformeli.desafiospring.model","c":"PurchaseRequest","l":"PurchaseRequest()","u":"%3Cinit%3E()"},{"p":"com.github.transformeli.desafiospring.service","c":"PurchaseService","l":"PurchaseService()","u":"%3Cinit%3E()"},{"p":"com.github.transformeli.desafiospring.dto","c":"ProductDTO","l":"quantity"},{"p":"com.github.transformeli.desafiospring.model","c":"Product","l":"quantity"},{"p":"com.github.transformeli.desafiospring.model","c":"PurchaseRequest","l":"quantity"},{"p":"com.github.transformeli.desafiospring.repository","c":"ClientRepository","l":"readFile()"},{"p":"com.github.transformeli.desafiospring.repository","c":"ProductRepository","l":"readFile()"},{"p":"com.github.transformeli.desafiospring.service","c":"ClientService","l":"repo"},{"p":"com.github.transformeli.desafiospring.service","c":"ProductService","l":"repo"},{"p":"com.github.transformeli.desafiospring.repository","c":"ClientRepository","l":"saveClient(Client)","u":"saveClient(com.github.transformeli.desafiospring.model.Client)"},{"p":"com.github.transformeli.desafiospring.service","c":"ClientService","l":"saveClient(Client)","u":"saveClient(com.github.transformeli.desafiospring.model.Client)"},{"p":"com.github.transformeli.desafiospring.service","c":"IClientService","l":"saveClient(Client)","u":"saveClient(com.github.transformeli.desafiospring.model.Client)"},{"p":"com.github.transformeli.desafiospring.repository","c":"ProductRepository","l":"saveProduct(Product)","u":"saveProduct(com.github.transformeli.desafiospring.model.Product)"},{"p":"com.github.transformeli.desafiospring.service","c":"IProductService","l":"saveProduct(Product)","u":"saveProduct(com.github.transformeli.desafiospring.model.Product)"},{"p":"com.github.transformeli.desafiospring.service","c":"ProductService","l":"saveProduct(Product)","u":"saveProduct(com.github.transformeli.desafiospring.model.Product)"},{"p":"com.github.transformeli.desafiospring.controller","c":"ArticlesController","l":"service"},{"p":"com.github.transformeli.desafiospring.controller","c":"ClientController","l":"service"},{"p":"com.github.transformeli.desafiospring.controller","c":"PurchaseController","l":"service"},{"p":"com.github.transformeli.desafiospring.exception","c":"ApiException","l":"setStatus(HttpStatus)","u":"setStatus(org.springframework.http.HttpStatus)"},{"p":"com.github.transformeli.desafiospring.dto","c":"ClientDTO","l":"state"},{"p":"com.github.transformeli.desafiospring.model","c":"Client","l":"state"},{"p":"com.github.transformeli.desafiospring.exception","c":"ApiException","l":"status"},{"p":"com.github.transformeli.desafiospring.exception","c":"ApiExceptionDTO","l":"status"},{"p":"com.github.transformeli.desafiospring.model","c":"Ticket","l":"Ticket()","u":"%3Cinit%3E()"},{"p":"com.github.transformeli.desafiospring.exception","c":"ApiException","l":"timestamp"},{"p":"com.github.transformeli.desafiospring.exception","c":"ApiExceptionDTO","l":"timestamp"},{"p":"com.github.transformeli.desafiospring.exception","c":"ApiException","l":"title"},{"p":"com.github.transformeli.desafiospring.exception","c":"ApiExceptionDTO","l":"title"},{"p":"com.github.transformeli.desafiospring.model","c":"Ticket","l":"total"},{"p":"com.github.transformeli.desafiospring.repository","c":"ProductRepository","l":"updateProduct(Product)","u":"updateProduct(com.github.transformeli.desafiospring.model.Product)"},{"p":"com.github.transformeli.desafiospring.repository","c":"ProductRepository","l":"updateProductsToFile(List<Product>)","u":"updateProductsToFile(java.util.List)"},{"p":"com.github.transformeli.desafiospring.controller","c":"ArticlesController","l":"updateStockPriceArticle(Long, Product)","u":"updateStockPriceArticle(java.lang.Long,com.github.transformeli.desafiospring.model.Product)"},{"p":"com.github.transformeli.desafiospring.service","c":"IProductService","l":"updateStockPriceArticle(Product)","u":"updateStockPriceArticle(com.github.transformeli.desafiospring.model.Product)"},{"p":"com.github.transformeli.desafiospring.service","c":"ProductService","l":"updateStockPriceArticle(Product)","u":"updateStockPriceArticle(com.github.transformeli.desafiospring.model.Product)"},{"p":"com.github.transformeli.desafiospring.service","c":"ClientService","l":"validateAddNewClient(Client)","u":"validateAddNewClient(com.github.transformeli.desafiospring.model.Client)"},{"p":"com.github.transformeli.desafiospring.enums","c":"ParamOrderEnum","l":"valueOf(int)"},{"p":"com.github.transformeli.desafiospring.enums","c":"ParamOrderEnum","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.github.transformeli.desafiospring.enums","c":"ParamOrderEnum","l":"values()"}];updateSearchResults();