{
	"info": {
		"_postman_id": "afb3346a-4011-4881-8f74-f33e4a6d13c7",
		"name": "Desafio_Spring_Grupo2_Transformeli",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21600732"
	},
	"item": [
		{
			"name": "api/v1/articles",
			"item": [
				{
					"name": "2xx",
					"item": [
						{
							"name": "[200] Busca de produtos",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/articles",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles"
									]
								}
							},
							"response": [
								{
									"name": "[200] Busca de produtos",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 00:34:47 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    },\n    {\n        \"productId\": 4,\n        \"name\": \"Chuteira\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 5,\n        \"name\": \"Mini Cama elastica\",\n        \"quantity\": 4\n    },\n    {\n        \"productId\": 6,\n        \"name\": \"Camiseta\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 7,\n        \"name\": \"Redmi Note 9\",\n        \"quantity\": 15\n    },\n    {\n        \"productId\": 8,\n        \"name\": \"Smartwatch\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    },\n    {\n        \"productId\": 12,\n        \"name\": \"Shorts\",\n        \"quantity\": 9\n    }\n]"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code 200\", () => {",
									"  pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "4xx",
					"item": [
						{
							"name": "[404] Busca de produtos com rota inválida",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/article",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"article"
									]
								}
							},
							"response": [
								{
									"name": "[404] Busca de produtos com rota inválida",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/article",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"article"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 00:36:09 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2022-07-11T00:36:09.616+00:00\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"message\": \"No message available\",\n    \"path\": \"/api/v1/article\"\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code 404\", () => {",
									"  pm.response.to.have.status(404);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "api/v1/articles?category=",
					"item": [
						{
							"name": "2xx",
							"item": [
								{
									"name": "[200] Busca por categoria válida de produtos",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Esportes",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Esportes",
													"description": "Categoria de produtos. "
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por categoria válida de produtos",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Esportes",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Esportes"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Fri, 08 Jul 2022 20:24:02 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 4,\n        \"name\": \"Chuteira\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 5,\n        \"name\": \"Mini Cama elastica\",\n        \"quantity\": 4\n    },\n    {\n        \"productId\": 6,\n        \"name\": \"Camiseta\",\n        \"quantity\": 2\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por categoria válida em upper case",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=CELULARES",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "CELULARES",
													"description": "Categoria de produtos. "
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por categoria válida em upper case",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=CELULARES",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "CELULARES",
															"description": "Categoria de produtos. "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Fri, 08 Jul 2022 20:29:30 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 7,\n        \"name\": \"Redmi Note 9\",\n        \"quantity\": 15\n    },\n    {\n        \"productId\": 8,\n        \"name\": \"Smartwatch\",\n        \"quantity\": 5\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por categoria válida em lower case",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=roupas",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "roupas",
													"description": "Categoria de produtos. "
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por categoria válida em lower case",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=roupas",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "roupas",
															"description": "Categoria de produtos. "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Fri, 08 Jul 2022 20:28:43 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    },\n    {\n        \"productId\": 12,\n        \"name\": \"Shorts\",\n        \"quantity\": 9\n    }\n]"
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code 200\", () => {",
											"  pm.response.to.have.status(200);",
											"});",
											""
										]
									}
								}
							]
						},
						{
							"name": "4xx",
							"item": [
								{
									"name": "[404] Busca por categoria inválida",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=PeRFuMaRi4",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "PeRFuMaRi4",
													"description": "Categoria de produtos. "
												}
											]
										}
									},
									"response": [
										{
											"name": "[404] Busca por categoria inválida",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=PeRFuMaRi4",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "PeRFuMaRi4",
															"description": "Categoria de produtos. "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 23:17:52 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T20:17:52.008091\"\n}"
										}
									]
								},
								{
									"name": "[404] Busca sem filtro de categoria",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "",
													"description": "Categoria de produtos. "
												}
											]
										}
									},
									"response": [
										{
											"name": "[404] Busca sem filtro de categoria",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "",
															"description": "Categoria de produtos. "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 23:18:26 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T20:18:26.159461\"\n}"
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code 404\", () => {",
											"  pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "api/v1/articles?category=&freeShipping=&order=",
					"item": [
						{
							"name": "2xx",
							"item": [
								{
									"name": "[200] Busca por categoria válida",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Celulares",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Celulares",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto.",
													"disabled": true
												},
												{
													"key": "order",
													"value": "3",
													"description": "Critério de ordenação.",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por categoria válida",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Celulares",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Celulares",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto.",
															"disabled": true
														},
														{
															"key": "order",
															"value": "3",
															"description": "Critério de ordenação.",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 00:09:44 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 7,\n        \"name\": \"Redmi Note 9\",\n        \"quantity\": 15\n    },\n    {\n        \"productId\": 8,\n        \"name\": \"Smartwatch\",\n        \"quantity\": 5\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por frete grátis true",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=true",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Mesa",
													"description": "Categoria do produto.",
													"disabled": true
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "3",
													"description": "Critério de ordenação.",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por frete grátis true",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?freeShipping=true",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Mesa",
															"description": "Categoria do produto.",
															"disabled": true
														},
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "3",
															"description": "Critério de ordenação.",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 00:11:07 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    },\n    {\n        \"productId\": 4,\n        \"name\": \"Chuteira\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 5,\n        \"name\": \"Mini Cama elastica\",\n        \"quantity\": 4\n    },\n    {\n        \"productId\": 7,\n        \"name\": \"Redmi Note 9\",\n        \"quantity\": 15\n    },\n    {\n        \"productId\": 8,\n        \"name\": \"Smartwatch\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 12,\n        \"name\": \"Shorts\",\n        \"quantity\": 9\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por frete grátis false",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=false",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Mesa",
													"description": "Categoria do produto.",
													"disabled": true
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "3",
													"description": "Critério de ordenação.",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por frete grátis false",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?freeShipping=false",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Mesa",
															"description": "Categoria do produto.",
															"disabled": true
														},
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "3",
															"description": "Critério de ordenação.",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 00:11:42 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 6,\n        \"name\": \"Camiseta\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por ordenação crescente",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?order=0",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Mesa",
													"description": "Categoria do produto.",
													"disabled": true
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto.",
													"disabled": true
												},
												{
													"key": "order",
													"value": "0",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por ordenação crescente",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?order=0",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Mesa",
															"description": "Categoria do produto.",
															"disabled": true
														},
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto.",
															"disabled": true
														},
														{
															"key": "order",
															"value": "0",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 00:12:45 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 6,\n        \"name\": \"Camiseta\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 4,\n        \"name\": \"Chuteira\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    },\n    {\n        \"productId\": 5,\n        \"name\": \"Mini Cama elastica\",\n        \"quantity\": 4\n    },\n    {\n        \"productId\": 7,\n        \"name\": \"Redmi Note 9\",\n        \"quantity\": 15\n    },\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 12,\n        \"name\": \"Shorts\",\n        \"quantity\": 9\n    },\n    {\n        \"productId\": 8,\n        \"name\": \"Smartwatch\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por ordenação decrescente",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?order=1",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Mesa",
													"description": "Categoria do produto.",
													"disabled": true
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto.",
													"disabled": true
												},
												{
													"key": "order",
													"value": "1",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por ordenação decrescente",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?order=1",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Mesa",
															"description": "Categoria do produto.",
															"disabled": true
														},
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto.",
															"disabled": true
														},
														{
															"key": "order",
															"value": "1",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 00:13:14 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    },\n    {\n        \"productId\": 8,\n        \"name\": \"Smartwatch\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 12,\n        \"name\": \"Shorts\",\n        \"quantity\": 9\n    },\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 7,\n        \"name\": \"Redmi Note 9\",\n        \"quantity\": 15\n    },\n    {\n        \"productId\": 5,\n        \"name\": \"Mini Cama elastica\",\n        \"quantity\": 4\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 4,\n        \"name\": \"Chuteira\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 6,\n        \"name\": \"Camiseta\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por ordenação do maior para o menor preço",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?order=2",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Mesa",
													"description": "Categoria do produto.",
													"disabled": true
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto.",
													"disabled": true
												},
												{
													"key": "order",
													"value": "2",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por ordenação do maior para o menor preço",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?order=2",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Mesa",
															"description": "Categoria do produto.",
															"disabled": true
														},
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto.",
															"disabled": true
														},
														{
															"key": "order",
															"value": "2",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 00:14:32 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 6,\n        \"name\": \"Camiseta\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 5,\n        \"name\": \"Mini Cama elastica\",\n        \"quantity\": 4\n    },\n    {\n        \"productId\": 4,\n        \"name\": \"Chuteira\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 12,\n        \"name\": \"Shorts\",\n        \"quantity\": 9\n    },\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 8,\n        \"name\": \"Smartwatch\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 7,\n        \"name\": \"Redmi Note 9\",\n        \"quantity\": 15\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por ordenação do menor para o maior preço",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?order=3",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Mesa",
													"description": "Categoria do produto.",
													"disabled": true
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto.",
													"disabled": true
												},
												{
													"key": "order",
													"value": "3",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por ordenação do menor para o maior preço",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?order=3",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Mesa",
															"description": "Categoria do produto.",
															"disabled": true
														},
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto.",
															"disabled": true
														},
														{
															"key": "order",
															"value": "3",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 00:15:17 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 7,\n        \"name\": \"Redmi Note 9\",\n        \"quantity\": 15\n    },\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 8,\n        \"name\": \"Smartwatch\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    },\n    {\n        \"productId\": 12,\n        \"name\": \"Shorts\",\n        \"quantity\": 9\n    },\n    {\n        \"productId\": 4,\n        \"name\": \"Chuteira\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 5,\n        \"name\": \"Mini Cama elastica\",\n        \"quantity\": 4\n    },\n    {\n        \"productId\": 6,\n        \"name\": \"Camiseta\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por categoria válida e frete grátis false e ordenação alfabética crescente",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false&order=0",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Roupas",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "0",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por categoria válida e frete grátis false e ordenação alfabética crescente",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false&order=0",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Roupas",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "0",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 23:34:40 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por categoria válida e frete grátis false e ordenação alfabética decrescente",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false&order=1",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Roupas",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "1",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por categoria válida e frete grátis false e ordenação alfabética decrescente",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false&order=1",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Roupas",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "1",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 23:20:35 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por categoria válida e frete grátis false e ordenação por menor preço até o maior preço",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false&order=3",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Roupas",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "3",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por categoria válida e frete grátis false e ordenação por menor preço até o maior preço",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false&order=3",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Roupas",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "3",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 23:38:10 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por categoria válida e frete grátis false e ordenação por maior preço até o menor preço",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false&order=2",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Roupas",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "2",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por categoria válida e frete grátis false e ordenação por maior preço até o menor preço",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false&order=2",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Roupas",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "2",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 23:41:22 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por categoria válida e frete grátis false sem ordenação",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Roupas",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "2",
													"description": "Critério de ordenação.",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por categoria válida e frete grátis false sem ordenação",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Roupas",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "2",
															"description": "Critério de ordenação.",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 23:43:11 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por categoria válida e frete grátis false sem ordenação",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Roupas",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "0",
													"description": "Critério de ordenação.",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por categoria válida e frete grátis false sem ordenação",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Roupas",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "0",
															"description": "Critério de ordenação.",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Fri, 08 Jul 2022 21:09:05 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por categoria válida, frete grátis true sem ordenação",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Roupas",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "0",
													"description": "Critério de ordenação.",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por categoria válida, frete grátis true sem ordenação",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Roupas&freeShipping=false",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Roupas",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "0",
															"description": "Critério de ordenação.",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 23:44:48 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por categoria válida, frete grátis true e ordenação alfabética crescente",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=0",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Ferramentas",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "0",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por categoria válida, frete grátis true e ordenação alfabética crescente",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=0",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Ferramentas",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "0",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Fri, 08 Jul 2022 20:51:51 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por categoria válida, frete grátis true e ordenação alfabética decrescente",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=1",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Ferramentas",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "1",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por categoria válida, frete grátis true e ordenação alfabética decrescente",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=1",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Ferramentas",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "1",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 23:49:07 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    },\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por categoria válida, frete grátis true ordenado do maior para o menor preço",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=2",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Ferramentas",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "2",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por categoria válida, frete grátis true ordenado do maior para o menor preço",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=2",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Ferramentas",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "2",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 23:50:22 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por categoria válida, frete grátis true ordenado do menor para o maior preço",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=3",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Ferramentas",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "3",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por categoria válida, frete grátis true ordenado do menor para o maior preço",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=3",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Ferramentas",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "3",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 23:51:24 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    }\n]"
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code 200\", () => {",
											"  pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							]
						},
						{
							"name": "4xx",
							"item": [
								{
									"name": "[400] Busca por categoria válida com ordenação não existente",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Celulares&order=10",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Celulares",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto.",
													"disabled": true
												},
												{
													"key": "order",
													"value": "10",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[400] Busca por categoria válida com ordenação não existente",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Celulares&order=10",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Celulares",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto.",
															"disabled": true
														},
														{
															"key": "order",
															"value": "10",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 00:19:00 GMT"
												},
												{
													"key": "Connection",
													"value": "close"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Bad Request\",\n    \"status\": 400,\n    \"message\": \"invalid orderId\",\n    \"timestamp\": \"2022-07-10T21:19:00.363401\"\n}"
										}
									]
								},
								{
									"name": "[400] Busca por frete grátis true com ordenação não existente",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=true&order=100",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Celulares",
													"description": "Categoria do produto.",
													"disabled": true
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "100",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[400] Busca por frete grátis true com ordenação não existente",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?freeShipping=true&order=100",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Celulares",
															"description": "Categoria do produto.",
															"disabled": true
														},
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "100",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 00:20:08 GMT"
												},
												{
													"key": "Connection",
													"value": "close"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Bad Request\",\n    \"status\": 400,\n    \"message\": \"invalid orderId\",\n    \"timestamp\": \"2022-07-10T21:20:08.914182\"\n}"
										}
									]
								},
								{
									"name": "[400] Busca por categoria inválida com ordenação não existente",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=false&order=10000",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Celulares",
													"description": "Categoria do produto.",
													"disabled": true
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "10000",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[400] Busca por categoria inválida com ordenação não existente",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?freeShipping=false&order=10000",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Celulares",
															"description": "Categoria do produto.",
															"disabled": true
														},
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "10000",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 00:21:45 GMT"
												},
												{
													"key": "Connection",
													"value": "close"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Bad Request\",\n    \"status\": 400,\n    \"message\": \"invalid orderId\",\n    \"timestamp\": \"2022-07-10T21:21:45.094691\"\n}"
										}
									]
								},
								{
									"name": "[400] Busca por frete grátis false com ordenação não existente",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=false&order=1000",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Celulares",
													"description": "Categoria do produto.",
													"disabled": true
												},
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "1000",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[400] Busca por frete grátis false com ordenação não existente",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?freeShipping=false&order=1000",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Celulares",
															"description": "Categoria do produto.",
															"disabled": true
														},
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "1000",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 00:20:43 GMT"
												},
												{
													"key": "Connection",
													"value": "close"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Bad Request\",\n    \"status\": 400,\n    \"message\": \"invalid orderId\",\n    \"timestamp\": \"2022-07-10T21:20:43.794798\"\n}"
										}
									]
								},
								{
									"name": "[404] Busca por categoria inválida, frete grátis true sem ordenação",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Banho&freeShipping=true",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Banho",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "3",
													"description": "Critério de ordenação.",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"name": "[404] Busca por categoria inválida, frete grátis true sem ordenação",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Banho&freeShipping=true",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Banho",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "3",
															"description": "Critério de ordenação.",
															"disabled": true
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 23:55:07 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T20:55:07.450302\"\n}"
										}
									]
								},
								{
									"name": "[404] Busca por categoria inválida, frete grátis true sem ordenação alfabética crescente",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Mesa&freeShipping=true&order=0",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Mesa",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "0",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[404] Busca por categoria inválida, frete grátis true sem ordenação alfabética crescente",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Mesa&freeShipping=true&order=0",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Mesa",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "0",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 23:56:49 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T20:56:49.871879\"\n}"
										}
									]
								},
								{
									"name": "[404] Busca por categoria inválida, frete grátis true sem ordenação alfabética decrescente",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=1",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Cama",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "1",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[404] Busca por categoria inválida, frete grátis true sem ordenação alfabética decrescente",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=1",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Cama",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "1",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 23:57:36 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T20:57:36.576874\"\n}"
										}
									]
								},
								{
									"name": "[404] Busca por categoria inválida, frete grátis true sem ordenação do maior para o menor preço",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=2",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Cama",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "2",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[404] Busca por categoria inválida, frete grátis true sem ordenação do maior para o menor preço",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=2",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Cama",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "2",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 23:58:44 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T20:58:44.215141\"\n}"
										}
									]
								},
								{
									"name": "[404] Busca por categoria inválida, frete grátis true sem ordenação do menor para o maior preço",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=3",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Cama",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "3",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[404] Busca por categoria inválida, frete grátis true sem ordenação do menor para o maior preço",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=3",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Cama",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "3",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 23:59:39 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T20:59:39.888865\"\n}"
										}
									]
								},
								{
									"name": "[404] Busca por categoria inválida, frete grátis false sem ordenação",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Cama",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "3",
													"description": "Critério de ordenação.",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"name": "[404] Busca por categoria inválida, frete grátis false sem ordenação",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Cama",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "3",
															"description": "Critério de ordenação.",
															"disabled": true
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 00:04:26 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T21:04:26.718156\"\n}"
										}
									]
								},
								{
									"name": "[404] Busca por categoria inválida, frete grátis false em ordem alfabética crescente",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=0",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Cama",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "0",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[404] Busca por categoria inválida, frete grátis false em ordem alfabética crescente",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=0",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Cama",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "0",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 00:05:47 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T21:05:47.349897\"\n}"
										}
									]
								},
								{
									"name": "[404] Busca por categoria inválida, frete grátis false em ordem alfabética decrescente",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=1",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Cama",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "1",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[404] Busca por categoria inválida, frete grátis false em ordem alfabética decrescente",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=1",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Cama",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "1",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 00:06:13 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T21:06:13.948484\"\n}"
										}
									]
								},
								{
									"name": "[404] Busca por categoria inválida, frete grátis false em ordem do maior para o menor preço",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=2",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Cama",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "2",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[404] Busca por categoria inválida, frete grátis false em ordem do maior para o menor preço",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=2",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Cama",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "2",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 00:07:01 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T21:07:01.144712\"\n}"
										}
									]
								},
								{
									"name": "[404] Busca por categoria inválida, frete grátis false em ordem do menor para o maior preço",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=3",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Cama",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "order",
													"value": "3",
													"description": "Critério de ordenação."
												}
											]
										}
									},
									"response": [
										{
											"name": "[404] Busca por categoria inválida, frete grátis false em ordem do menor para o maior preço",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Cama&freeShipping=true&order=3",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Cama",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "order",
															"value": "3",
															"description": "Critério de ordenação."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 00:07:39 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T21:07:39.027758\"\n}"
										}
									]
								},
								{
									"name": "[404] Busca por categoria inválida",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?category=Mesa",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "category",
													"value": "Mesa",
													"description": "Categoria do produto."
												},
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto.",
													"disabled": true
												},
												{
													"key": "order",
													"value": "3",
													"description": "Critério de ordenação.",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"name": "[404] Busca por categoria inválida",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?category=Mesa",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "category",
															"value": "Mesa",
															"description": "Categoria do produto."
														},
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto.",
															"disabled": true
														},
														{
															"key": "order",
															"value": "3",
															"description": "Critério de ordenação.",
															"disabled": true
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 00:10:31 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"No registered products in this category\",\n    \"timestamp\": \"2022-07-10T21:10:31.386778\"\n}"
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code 400 ou 404\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([400, 404]);",
											"});"
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "api/v1/articles?freeShipping=&prestige=",
					"item": [
						{
							"name": "2xx",
							"item": [
								{
									"name": "[200] Busca por produtos sem filtro",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto.",
													"disabled": true
												},
												{
													"key": "prestige",
													"value": "*****",
													"description": "Avaliação do produto.",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por produtos sem filtro",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto.",
															"disabled": true
														},
														{
															"key": "prestige",
															"value": "*****",
															"description": "Avaliação do produto.",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 03:31:04 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    },\n    {\n        \"productId\": 4,\n        \"name\": \"Chuteira\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 5,\n        \"name\": \"Mini Cama elastica\",\n        \"quantity\": 4\n    },\n    {\n        \"productId\": 6,\n        \"name\": \"Camiseta\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 7,\n        \"name\": \"Redmi Note 9\",\n        \"quantity\": 15\n    },\n    {\n        \"productId\": 8,\n        \"name\": \"Smartwatch\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    },\n    {\n        \"productId\": 12,\n        \"name\": \"Shorts\",\n        \"quantity\": 9\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por frete grátis true sem filtro de avaliação",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=true",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "prestige",
													"value": "",
													"description": "Avaliação do produto.",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por frete grátis true sem filtro de avaliação",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?freeShipping=true",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "prestige",
															"value": "",
															"description": "Avaliação do produto.",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 02:49:21 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    },\n    {\n        \"productId\": 4,\n        \"name\": \"Chuteira\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 5,\n        \"name\": \"Mini Cama elastica\",\n        \"quantity\": 4\n    },\n    {\n        \"productId\": 7,\n        \"name\": \"Redmi Note 9\",\n        \"quantity\": 15\n    },\n    {\n        \"productId\": 8,\n        \"name\": \"Smartwatch\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 12,\n        \"name\": \"Shorts\",\n        \"quantity\": 9\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por frete grátis true e avaliação 2",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=true&prestige=**",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "prestige",
													"value": "**",
													"description": "Avaliação do produto."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por frete grátis true e avaliação 2",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?freeShipping=true&prestige=**",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "prestige",
															"value": "**",
															"description": "Avaliação do produto."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 02:47:00 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 8,\n        \"name\": \"Smartwatch\",\n        \"quantity\": 5\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por frete grátis true e avaliação 3",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=true&prestige=***",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "prestige",
													"value": "***",
													"description": "Avaliação do produto."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por frete grátis true e avaliação 3",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?freeShipping=true&prestige=***",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "prestige",
															"value": "***",
															"description": "Avaliação do produto."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 02:45:28 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    },\n    {\n        \"productId\": 12,\n        \"name\": \"Shorts\",\n        \"quantity\": 9\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por frete grátis true e avaliação 4",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=true&prestige=****",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "prestige",
													"value": "****",
													"description": "Avaliação do produto."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por frete grátis true e avaliação 4",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?freeShipping=true&prestige=****",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "prestige",
															"value": "****",
															"description": "Avaliação do produto."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 02:51:11 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 7,\n        \"name\": \"Redmi Note 9\",\n        \"quantity\": 15\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por frete grátis true e avaliação 5",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=true&prestige=*****",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "prestige",
													"value": "*****",
													"description": "Avaliação do produto."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por frete grátis true e avaliação 5",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?freeShipping=true&prestige=*****",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "prestige",
															"value": "*****",
															"description": "Avaliação do produto."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 02:51:39 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 4,\n        \"name\": \"Chuteira\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 5,\n        \"name\": \"Mini Cama elastica\",\n        \"quantity\": 4\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por frete grátis false sem filtro de avaliação",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=false",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "prestige",
													"value": "",
													"description": "Avaliação do produto.",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por frete grátis false sem filtro de avaliação",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?freeShipping=false",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto."
														},
														{
															"key": "prestige",
															"value": "",
															"description": "Avaliação do produto.",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 03:19:52 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 6,\n        \"name\": \"Camiseta\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por frete grátis false e avaliação 1",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=false&prestige=*",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "prestige",
													"value": "*",
													"description": "Avaliação do produto."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por frete grátis false e avaliação 1",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?freeShipping=false&prestige=*",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto."
														},
														{
															"key": "prestige",
															"value": "*",
															"description": "Avaliação do produto."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 03:22:35 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por frete grátis false e avaliação 3",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=false&prestige=***",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "prestige",
													"value": "***",
													"description": "Avaliação do produto."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por frete grátis false e avaliação 3",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?freeShipping=false&prestige=***",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto."
														},
														{
															"key": "prestige",
															"value": "***",
															"description": "Avaliação do produto."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 03:24:52 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 6,\n        \"name\": \"Camiseta\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por avaliação 1",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?prestige=*",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto.",
													"disabled": true
												},
												{
													"key": "prestige",
													"value": "*",
													"description": "Avaliação do produto."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por avaliação 1",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?prestige=*",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto.",
															"disabled": true
														},
														{
															"key": "prestige",
															"value": "*",
															"description": "Avaliação do produto."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 03:27:16 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por avaliação 2",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?prestige=**",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto.",
													"disabled": true
												},
												{
													"key": "prestige",
													"value": "**",
													"description": "Avaliação do produto."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por avaliação 2",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?prestige=**",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto.",
															"disabled": true
														},
														{
															"key": "prestige",
															"value": "**",
															"description": "Avaliação do produto."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 03:28:52 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 8,\n        \"name\": \"Smartwatch\",\n        \"quantity\": 5\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por avaliação 3",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?prestige=***",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto.",
													"disabled": true
												},
												{
													"key": "prestige",
													"value": "***",
													"description": "Avaliação do produto."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por avaliação 3",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?prestige=***",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto.",
															"disabled": true
														},
														{
															"key": "prestige",
															"value": "***",
															"description": "Avaliação do produto."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 03:29:24 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    },\n    {\n        \"productId\": 6,\n        \"name\": \"Camiseta\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 12,\n        \"name\": \"Shorts\",\n        \"quantity\": 9\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por avaliação 4",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?prestige=****",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto.",
													"disabled": true
												},
												{
													"key": "prestige",
													"value": "****",
													"description": "Avaliação do produto."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por avaliação 4",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?prestige=****",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto.",
															"disabled": true
														},
														{
															"key": "prestige",
															"value": "****",
															"description": "Avaliação do produto."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 03:29:52 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 7,\n        \"name\": \"Redmi Note 9\",\n        \"quantity\": 15\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por avaliação 5",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?prestige=*****",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto.",
													"disabled": true
												},
												{
													"key": "prestige",
													"value": "*****",
													"description": "Avaliação do produto."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por avaliação 5",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?prestige=*****",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto.",
															"disabled": true
														},
														{
															"key": "prestige",
															"value": "*****",
															"description": "Avaliação do produto."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 03:30:22 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 4,\n        \"name\": \"Chuteira\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 5,\n        \"name\": \"Mini Cama elastica\",\n        \"quantity\": 4\n    }\n]"
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code 200\", () => {",
											"  pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							]
						},
						{
							"name": "4xx",
							"item": [
								{
									"name": "[404] Busca por frete grátis true e sem avaliação",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=true&prestige=",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "prestige",
													"value": "",
													"description": "Avaliação do produto."
												}
											]
										}
									},
									"response": [
										{
											"name": "[404] Busca por frete grátis true e sem avaliação",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?freeShipping=true&prestige=",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "prestige",
															"value": "",
															"description": "Avaliação do produto."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 02:48:40 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"We don't have products for these filters\",\n    \"timestamp\": \"2022-07-10T23:48:40.549003\"\n}"
										}
									]
								},
								{
									"name": "[404] Busca por frete grátis true e avaliação 1",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=true&prestige=*",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "prestige",
													"value": "*",
													"description": "Avaliação do produto."
												}
											]
										}
									},
									"response": [
										{
											"name": "[404] Busca por frete grátis true e avaliação 1",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?freeShipping=true&prestige=*",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "prestige",
															"value": "*",
															"description": "Avaliação do produto."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 02:47:21 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"We don't have products for these filters\",\n    \"timestamp\": \"2022-07-10T23:47:21.629731\"\n}"
										}
									]
								},
								{
									"name": "[400] Busca por frete grátis true e avaliação com valor não esperado",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=true&prestige=4*7[*",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "freeShipping",
													"value": "true",
													"description": "Frete grátis do produto."
												},
												{
													"key": "prestige",
													"value": "4*7[*",
													"description": "Avaliação do produto."
												}
											]
										}
									},
									"response": [
										{
											"name": "[400] Busca por frete grátis true e avaliação com valor não esperado",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?freeShipping=true&prestige=4*7[*",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "freeShipping",
															"value": "true",
															"description": "Frete grátis do produto."
														},
														{
															"key": "prestige",
															"value": "4*7[*",
															"description": "Avaliação do produto."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "html",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/html;charset=utf-8"
												},
												{
													"key": "Content-Language",
													"value": "en"
												},
												{
													"key": "Content-Length",
													"value": "2115"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 02:52:43 GMT"
												},
												{
													"key": "Connection",
													"value": "close"
												}
											],
											"cookie": [],
											"body": "<!doctype html><html lang=\"en\"><head><title>HTTP Status 400 – Bad Request</title><style type=\"text/css\">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-size:22px;} h2 {font-size:16px;} h3 {font-size:14px;} p {font-size:12px;} a {color:black;} .line {height:1px;background-color:#525D76;border:none;}</style></head><body><h1>HTTP Status 400 – Bad Request</h1><hr class=\"line\" /><p><b>Type</b> Exception Report</p><p><b>Message</b> Invalid character found in the request target [&#47;api&#47;v1&#47;articles?freeShipping=true&amp;prestige=4*7[* ]. The valid characters are defined in RFC 7230 and RFC 3986</p><p><b>Description</b> The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).</p><p><b>Exception</b></p><pre>java.lang.IllegalArgumentException: Invalid character found in the request target [&#47;api&#47;v1&#47;articles?freeShipping=true&amp;prestige=4*7[* ]. The valid characters are defined in RFC 7230 and RFC 3986\n\torg.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:494)\n\torg.apache.coyote.http11.Http11Processor.service(Http11Processor.java:271)\n\torg.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\n\torg.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\n\torg.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\n\torg.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\n\torg.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\n\torg.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\n\torg.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tjava.base&#47;java.lang.Thread.run(Thread.java:829)\n</pre><p><b>Note</b> The full stack trace of the root cause is available in the server logs.</p><hr class=\"line\" /><h3>Apache Tomcat/9.0.64</h3></body></html>"
										}
									]
								},
								{
									"name": "[404] Busca por frete grátis false e sem avaliação",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=false&prestige=",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "prestige",
													"value": "",
													"description": "Avaliação do produto."
												}
											]
										}
									},
									"response": [
										{
											"name": "[404] Busca por frete grátis false e sem avaliação",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?freeShipping=false&prestige=",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto."
														},
														{
															"key": "prestige",
															"value": "",
															"description": "Avaliação do produto."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 03:21:57 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"We don't have products for these filters\",\n    \"timestamp\": \"2022-07-11T00:21:57.180743\"\n}"
										}
									]
								},
								{
									"name": "[404] Busca por frete grátis false e avaliação 2",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=false&prestige=**",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "prestige",
													"value": "**",
													"description": "Avaliação do produto."
												}
											]
										}
									},
									"response": [
										{
											"name": "[404] Busca por frete grátis false e avaliação 2",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?freeShipping=false&prestige=**",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto."
														},
														{
															"key": "prestige",
															"value": "**",
															"description": "Avaliação do produto."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 03:23:47 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"We don't have products for these filters\",\n    \"timestamp\": \"2022-07-11T00:23:47.226601\"\n}"
										}
									]
								},
								{
									"name": "[404] Busca por frete grátis false e avaliação 5",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=false&prestige=*****",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "prestige",
													"value": "*****",
													"description": "Avaliação do produto."
												}
											]
										}
									},
									"response": [
										{
											"name": "[404] Busca por frete grátis false e avaliação 5",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?freeShipping=false&prestige=*****",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto."
														},
														{
															"key": "prestige",
															"value": "*****",
															"description": "Avaliação do produto."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 03:25:53 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"We don't have products for these filters\",\n    \"timestamp\": \"2022-07-11T00:25:53.352361\"\n}"
										}
									]
								},
								{
									"name": "[404] Busca por frete grátis false e avaliação 4",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?freeShipping=false&prestige=****",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "freeShipping",
													"value": "false",
													"description": "Frete grátis do produto."
												},
												{
													"key": "prestige",
													"value": "****",
													"description": "Avaliação do produto."
												}
											]
										}
									},
									"response": [
										{
											"name": "[404] Busca por frete grátis false e avaliação 4",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?freeShipping=false&prestige=****",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "freeShipping",
															"value": "false",
															"description": "Frete grátis do produto."
														},
														{
															"key": "prestige",
															"value": "****",
															"description": "Avaliação do produto."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 03:37:10 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"We don't have products for these filters\",\n    \"timestamp\": \"2022-07-11T00:37:10.413718\"\n}"
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code 400 ou 404\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([400, 404]);",
											"});"
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "api/v1/articles?product=&brand=",
					"item": [
						{
							"name": "2xx",
							"item": [
								{
									"name": "[200] Busca por produto e marca válidas",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?product=Furadeira&brand=Black %26 Decker",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "product",
													"value": "Furadeira",
													"description": "Nome do produto. "
												},
												{
													"key": "brand",
													"value": "Black %26 Decker",
													"description": "Marca do produto. "
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por produto e marca válidas",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?product=Furadeira&brand=Black %26 Decker",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "product",
															"value": "Furadeira"
														},
														{
															"key": "brand",
															"value": "Black %26 Decker"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 03:55:14 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por nome do produto vazio e marca válida",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?product=&brand=FORTGPRO",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "product",
													"value": "",
													"description": "Produto do produto."
												},
												{
													"key": "brand",
													"value": "FORTGPRO",
													"description": "Marca do produto."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por nome do produto vazio e marca válida",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?product=&brand=FORTGPRO",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "product",
															"value": "",
															"description": "Produto do produto."
														},
														{
															"key": "brand",
															"value": "FORTGPRO",
															"description": "Marca do produto."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 04:03:25 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por produto",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?product=Soldadora",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "product",
													"value": "Soldadora",
													"description": "Nome do produto."
												},
												{
													"key": "brand",
													"value": "Lorenzetti",
													"description": "Marca do produto.",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por produto",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?product=Soldadora",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "product",
															"value": "Soldadora"
														},
														{
															"key": "brand",
															"value": "Lorenzetti",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 03:58:55 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"quantity\": 10\n    },\n    {\n        \"productId\": 4,\n        \"name\": \"Chuteira\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 5,\n        \"name\": \"Mini Cama elastica\",\n        \"quantity\": 4\n    },\n    {\n        \"productId\": 6,\n        \"name\": \"Camiseta\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 7,\n        \"name\": \"Redmi Note 9\",\n        \"quantity\": 15\n    },\n    {\n        \"productId\": 8,\n        \"name\": \"Smartwatch\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"quantity\": 2\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"quantity\": 6\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    },\n    {\n        \"productId\": 12,\n        \"name\": \"Shorts\",\n        \"quantity\": 9\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    }\n]"
										}
									]
								},
								{
									"name": "[200] Busca por marca do produto",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?brand=Gonew",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "product",
													"value": "Soldadora",
													"description": "Nome do produto.",
													"disabled": true
												},
												{
													"key": "brand",
													"value": "Gonew",
													"description": "Marca do produto."
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca por marca do produto",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?brand=Gonew",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "product",
															"value": "Soldadora",
															"description": "Nome do produto.",
															"disabled": true
														},
														{
															"key": "brand",
															"value": "Gonew",
															"description": "Marca do produto."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 04:01:40 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"quantity\": 8\n    }\n]"
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code 200\", () => {",
											"  pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							]
						},
						{
							"name": "4xx",
							"item": [
								{
									"name": "[404] Busca por produto e marcas inválidas",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/articles?product=Lâmpada&brand=Lorenzetti",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles"
											],
											"query": [
												{
													"key": "product",
													"value": "Lâmpada",
													"description": "Produto do produto."
												},
												{
													"key": "brand",
													"value": "Lorenzetti",
													"description": "Marca do produto."
												}
											]
										}
									},
									"response": [
										{
											"name": "[404] Busca por produto e marcas inválidas",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/articles?product=Lâmpada&brand=Lorenzetti",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"articles"
													],
													"query": [
														{
															"key": "product",
															"value": "Lâmpada"
														},
														{
															"key": "brand",
															"value": "Lorenzetti"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Mon, 11 Jul 2022 03:57:45 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"message\": \"We don't have products for these filters\",\n    \"timestamp\": \"2022-07-11T00:57:45.018962\"\n}"
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code 404\", () => {",
											"  pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							]
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "api/v1/insert-articles-request",
			"item": [
				{
					"name": "2xx",
					"item": [
						{
							"name": "[201] Envio de dados do produto",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000.00,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 100.00,\n        \"quantity\": 7,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/insert-articles-request",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"insert-articles-request"
									]
								}
							},
							"response": [
								{
									"name": "[201] Envio de dados do produto",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000.00,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 100.00,\n        \"quantity\": 7,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/insert-articles-request",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"insert-articles-request"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 04:08:54 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"quantity\": 5\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"quantity\": 7\n    }\n]"
								}
							]
						},
						{
							"name": "[201] Envio de dados do produto por array vazio",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/insert-articles-request",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"insert-articles-request"
									]
								}
							},
							"response": [
								{
									"name": "[201] Envio de dados do produto por array vazio",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[{}]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/insert-articles-request",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"insert-articles-request"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 04:19:14 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": null,\n        \"name\": null,\n        \"quantity\": null\n    }\n]"
								}
							]
						},
						{
							"name": "[201] Envio de dados com atributo nome interpretado como null",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"productId\": 17,\n        \"nome\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000.00,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/insert-articles-request",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"insert-articles-request"
									]
								}
							},
							"response": [
								{
									"name": "[201] Envio de dados com atributo nome interpretado como null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"productId\": 17,\n        \"nome\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000.00,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/insert-articles-request",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"insert-articles-request"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 04:13:36 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 17,\n        \"name\": null,\n        \"quantity\": 5\n    }\n]"
								}
							]
						},
						{
							"name": "[201] Envio de dados sem preço de produto",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"productId\": 17,\n        \"nome\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/insert-articles-request",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"insert-articles-request"
									]
								}
							},
							"response": [
								{
									"name": "[201] Envio de dados sem preço de produto",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"productId\": 17,\n        \"nome\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/insert-articles-request",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"insert-articles-request"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 04:17:02 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 17,\n        \"name\": null,\n        \"quantity\": 5\n    }\n]"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code 201\", () => {",
									"  pm.response.to.have.status(201);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "4xx",
					"item": [
						{
							"name": "[400] Envio de dados do produto sem body",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/v1/insert-articles-request",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"insert-articles-request"
									]
								}
							},
							"response": [
								{
									"name": "[400] Envio de dados do produto sem body",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/insert-articles-request",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"insert-articles-request"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 04:17:44 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2022-07-11T04:17:44.499+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"trace\": \"org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public org.springframework.http.ResponseEntity<java.util.List<com.github.transformeli.desafiospring.dto.ProductDTO>> com.github.transformeli.desafiospring.controller.ArticlesController.createArticles(java.util.List<com.github.transformeli.desafiospring.model.Product>)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\n\",\n    \"message\": \"Required request body is missing: public org.springframework.http.ResponseEntity<java.util.List<com.github.transformeli.desafiospring.dto.ProductDTO>> com.github.transformeli.desafiospring.controller.ArticlesController.createArticles(java.util.List<com.github.transformeli.desafiospring.model.Product>)\",\n    \"path\": \"/api/v1/insert-articles-request\"\n}"
								}
							]
						},
						{
							"name": "[400] Envio de dados com sintaxe errada no body",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"productId\": 15,\n        \"name\": \"Martelo do Thor\"\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000.00,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/insert-articles-request",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"insert-articles-request"
									]
								}
							},
							"response": [
								{
									"name": "[400] Envio de dados com sintaxe errada no body",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"productId\": 15,\n        \"name\": \"Martelo do Thor\"\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000.00,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/insert-articles-request",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"insert-articles-request"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 04:12:02 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2022-07-11T04:12:02.389+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"trace\": \"org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 5, column: 10] (through reference chain: java.util.ArrayList[0])\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\nCaused by: com.fasterxml.jackson.databind.JsonMappingException: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 5, column: 10] (through reference chain: java.util.ArrayList[0])\\n\\tat com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:392)\\n\\tat com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:363)\\n\\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer._deserializeFromArray(CollectionDeserializer.java:371)\\n\\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:244)\\n\\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28)\\n\\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)\\n\\t... 51 more\\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 5, column: 10]\\n\\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2391)\\n\\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:735)\\n\\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:659)\\n\\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(UTF8StreamJsonParser.java:1056)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:398)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:184)\\n\\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer._deserializeFromArray(CollectionDeserializer.java:355)\\n\\t... 57 more\\n\",\n    \"message\": \"JSON parse error: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 5, column: 10] (through reference chain: java.util.ArrayList[0])\",\n    \"path\": \"/api/v1/insert-articles-request\"\n}"
								}
							]
						},
						{
							"name": "[415] Envio de dados com body em formato não esperado",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000.00,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 100.00,\n        \"quantity\": 7,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    }\n]",
									"options": {
										"raw": {
											"language": "javascript"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/insert-articles-request",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"insert-articles-request"
									]
								}
							},
							"response": [
								{
									"name": "[415] Envio de dados com body em formato não esperado",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000.00,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 100.00,\n        \"quantity\": 7,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    }\n]",
											"options": {
												"raw": {
													"language": "javascript"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/insert-articles-request",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"insert-articles-request"
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Accept",
											"value": "application/json, application/*+json"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 04:10:30 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2022-07-11T04:10:30.723+00:00\",\n    \"status\": 415,\n    \"error\": \"Unsupported Media Type\",\n    \"trace\": \"org.springframework.web.HttpMediaTypeNotSupportedException: Content type 'application/javascript;charset=UTF-8' not supported\\n\\tat org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:211)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\n\",\n    \"message\": \"Content type 'application/javascript;charset=UTF-8' not supported\",\n    \"path\": \"/api/v1/insert-articles-request\"\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code 400 ou 415\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([400, 415]);",
									"});"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "api/v1/purchase-request",
			"item": [
				{
					"name": "2xx",
					"item": [
						{
							"name": "[200] Envio de dados de compra de produto com body válido",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"brand\": \"Black & Decker\",\n        \"quantity\": 10\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/purchase-request",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"purchase-request"
									]
								}
							},
							"response": [
								{
									"name": "[200] Envio de dados de compra de produto com body válido",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"brand\": \"Black & Decker\",\n        \"quantity\": 10\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/purchase-request",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"purchase-request"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 04:39:31 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 4,\n    \"articles\": [\n        {\n            \"productId\": 3,\n            \"name\": \"Soldadora\",\n            \"category\": \"Ferramentas\",\n            \"brand\": \"Black & Decker\",\n            \"price\": 350,\n            \"quantity\": 10,\n            \"freeShipping\": true,\n            \"prestige\": \"***\"\n        }\n    ],\n    \"total\": 350\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code 200\", () => {",
									"  pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "4xx",
					"item": [
						{
							"name": "[400] Envio de dados de compra de produto com erro de sintaxe",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"productId\" : 7,\n        \"name\" : \"Redmi Note 9\",\n        \"category\" : \"Celulares\",\n        \"brand\" : \"Xiaomi\",\n        \"price\" : 2800.0,\n        \"quantity\" : 15\n        \"freeShipping\" : true,\n        \"prestige\" : \"****\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/purchase-request",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"purchase-request"
									]
								}
							},
							"response": [
								{
									"name": "[400] Envio de dados de compra de produto com erro de sintaxe",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"productId\" : 7,\n        \"name\" : \"Redmi Note 9\",\n        \"category\" : \"Celulares\",\n        \"brand\" : \"Xiaomi\",\n        \"price\" : 2800.0,\n        \"quantity\" : 15\n        \"freeShipping\" : true,\n        \"prestige\" : \"****\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/purchase-request",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"purchase-request"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 04:41:09 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2022-07-11T04:41:09.337+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"trace\": \"org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 9, column: 10] (through reference chain: java.util.ArrayList[0])\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\nCaused by: com.fasterxml.jackson.databind.JsonMappingException: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 9, column: 10] (through reference chain: java.util.ArrayList[0])\\n\\tat com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:392)\\n\\tat com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:363)\\n\\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer._deserializeFromArray(CollectionDeserializer.java:371)\\n\\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:244)\\n\\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28)\\n\\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)\\n\\t... 51 more\\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 9, column: 10]\\n\\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2391)\\n\\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:735)\\n\\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:659)\\n\\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(UTF8StreamJsonParser.java:1056)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:398)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:184)\\n\\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer._deserializeFromArray(CollectionDeserializer.java:355)\\n\\t... 57 more\\n\",\n    \"message\": \"JSON parse error: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 9, column: 10] (through reference chain: java.util.ArrayList[0])\",\n    \"path\": \"/api/v1/purchase-request\"\n}"
								}
							]
						},
						{
							"name": "[400] Envio de dados de compra de produto sem body",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/purchase-request",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"purchase-request"
									]
								}
							},
							"response": [
								{
									"name": "[400] Envio de dados de compra de produto sem body",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/purchase-request",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"purchase-request"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 04:45:25 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2022-07-11T04:45:25.464+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"trace\": \"org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public org.springframework.http.ResponseEntity<com.github.transformeli.desafiospring.model.Ticket> com.github.transformeli.desafiospring.controller.PurchaseController.processPurchase(java.util.List<com.github.transformeli.desafiospring.model.PurchaseRequest>)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\n\",\n    \"message\": \"Required request body is missing: public org.springframework.http.ResponseEntity<com.github.transformeli.desafiospring.model.Ticket> com.github.transformeli.desafiospring.controller.PurchaseController.processPurchase(java.util.List<com.github.transformeli.desafiospring.model.PurchaseRequest>)\",\n    \"path\": \"/api/v1/purchase-request\"\n}"
								}
							]
						},
						{
							"name": "[400] Envio de dados de compra de produto com formato de frete grátis não esperado",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"productId\" : 7,\n        \"name\" : \"Redmi Note 9\",\n        \"category\" : \"Celulares\",\n        \"brand\" : \"Xiaomi\",\n        \"price\" : 2800.0,\n        \"quantity\" : 15,\n        \"freeShipping\" : bool,\n        \"prestige\" : \"****\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/purchase-request",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"purchase-request"
									]
								}
							},
							"response": [
								{
									"name": "[400] Envio de dados de compra de produto com formato de frete grátis não esperado",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"productId\" : 7,\n        \"name\" : \"Redmi Note 9\",\n        \"category\" : \"Celulares\",\n        \"brand\" : \"Xiaomi\",\n        \"price\" : 2800.0,\n        \"quantity\" : 15,\n        \"freeShipping\" : bool,\n        \"prestige\" : \"****\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/purchase-request",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"purchase-request"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 04:42:23 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2022-07-11T04:42:23.057+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"trace\": \"org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unrecognized token 'bool': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false'); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Unrecognized token 'bool': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 9, column: 31] (through reference chain: java.util.ArrayList[0])\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\nCaused by: com.fasterxml.jackson.databind.JsonMappingException: Unrecognized token 'bool': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 9, column: 31] (through reference chain: java.util.ArrayList[0])\\n\\tat com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:392)\\n\\tat com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:363)\\n\\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer._deserializeFromArray(CollectionDeserializer.java:371)\\n\\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:244)\\n\\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28)\\n\\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)\\n\\t... 51 more\\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'bool': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 9, column: 31]\\n\\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2391)\\n\\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:745)\\n\\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(UTF8StreamJsonParser.java:3635)\\n\\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2734)\\n\\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(UTF8StreamJsonParser.java:1126)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:398)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:184)\\n\\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer._deserializeFromArray(CollectionDeserializer.java:355)\\n\\t... 57 more\\n\",\n    \"message\": \"JSON parse error: Unrecognized token 'bool': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false'); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Unrecognized token 'bool': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 9, column: 31] (through reference chain: java.util.ArrayList[0])\",\n    \"path\": \"/api/v1/purchase-request\"\n}"
								}
							]
						},
						{
							"name": "[415] Envio de dados de compra de produto com body enviado em formato não esperado",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"productId\" : 7,\n        \"name\" : \"Redmi Note 9\",\n        \"category\" : \"Celulares\",\n        \"brand\" : \"Xiaomi\",\n        \"price\" : 2800.0,\n        \"quantity\" : 15,\n        \"freeShipping\" : true,\n        \"prestige\" : \"****\"\n    }\n]",
									"options": {
										"raw": {
											"language": "html"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/purchase-request",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"purchase-request"
									]
								}
							},
							"response": [
								{
									"name": "[415] Envio de dados de compra de produto com body enviado em formato não esperado",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"productId\" : 7,\n        \"name\" : \"Redmi Note 9\",\n        \"category\" : \"Celulares\",\n        \"brand\" : \"Xiaomi\",\n        \"price\" : 2800.0,\n        \"quantity\" : 15,\n        \"freeShipping\" : true,\n        \"prestige\" : \"****\"\n    }\n]",
											"options": {
												"raw": {
													"language": "html"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/purchase-request",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"purchase-request"
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Accept",
											"value": "application/json, application/*+json"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 04:43:16 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2022-07-11T04:43:16.446+00:00\",\n    \"status\": 415,\n    \"error\": \"Unsupported Media Type\",\n    \"trace\": \"org.springframework.web.HttpMediaTypeNotSupportedException: Content type 'text/html;charset=UTF-8' not supported\\n\\tat org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:211)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\n\",\n    \"message\": \"Content type 'text/html;charset=UTF-8' not supported\",\n    \"path\": \"/api/v1/purchase-request\"\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code 400 e 415\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([400, 415]);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "5xx",
					"item": [
						{
							"name": "[500] Envio de dados de compra de produto com array vazio no body",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/purchase-request",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"purchase-request"
									]
								}
							},
							"response": [
								{
									"name": "[500] Envio de dados de compra de produto com array vazio no body",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[{}]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/purchase-request",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"purchase-request"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 04:44:16 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2022-07-11T04:44:16.972+00:00\",\n    \"status\": 500,\n    \"error\": \"Internal Server Error\",\n    \"trace\": \"java.lang.NullPointerException\\n\\tat com.github.transformeli.desafiospring.service.PurchaseService.lambda$processPurchase$0(PurchaseService.java:33)\\n\\tat java.base/java.util.stream.MatchOps$1MatchSink.accept(MatchOps.java:90)\\n\\tat java.base/java.util.ArrayList$ArrayListSpliterator.tryAdvance(ArrayList.java:1632)\\n\\tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\\n\\tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\\n\\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\\n\\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\\n\\tat java.base/java.util.stream.MatchOps$MatchOp.evaluateSequential(MatchOps.java:230)\\n\\tat java.base/java.util.stream.MatchOps$MatchOp.evaluateSequential(MatchOps.java:196)\\n\\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\\n\\tat java.base/java.util.stream.ReferencePipeline.anyMatch(ReferencePipeline.java:528)\\n\\tat com.github.transformeli.desafiospring.service.PurchaseService.lambda$processPurchase$1(PurchaseService.java:33)\\n\\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:176)\\n\\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\\n\\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)\\n\\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\\n\\tat java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)\\n\\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\\n\\tat java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)\\n\\tat com.github.transformeli.desafiospring.service.PurchaseService.processPurchase(PurchaseService.java:34)\\n\\tat com.github.transformeli.desafiospring.controller.PurchaseController.processPurchase(PurchaseController.java:26)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\n\",\n    \"message\": \"No message available\",\n    \"path\": \"/api/v1/purchase-request\"\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code 500\", () => {",
									"  pm.response.to.have.status(500);",
									"});",
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "api/v1/articles/update-articles/{productId}",
			"item": [
				{
					"name": "2xx",
					"item": [
						{
							"name": "[200] Atualização do registro de produto",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Serra de Bancada\",\n    \"category\": \"Ferramentas\",\n    \"brand\": \"FORTGPRO\",\n    \"price\": 1800.0,\n    \"quantity\": 5,\n    \"freeShipping\": true,\n    \"prestige\": \"****\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/articles/update-articles/:productId",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"update-articles",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "1",
											"description": "Identificador do produto."
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Atualização do registro de produto",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Serra de Bancada\",\n    \"category\": \"Ferramentas\",\n    \"brand\": \"FORTGPRO\",\n    \"price\": 1800.0,\n    \"quantity\": 5,\n    \"freeShipping\": true,\n    \"prestige\": \"****\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/articles/update-articles/:productId",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles",
												"update-articles",
												":productId"
											],
											"variable": [
												{
													"key": "productId",
													"value": "1",
													"description": "Identificador do produto."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 04:24:28 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 1800,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 500,\n        \"quantity\": 7,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 350,\n        \"quantity\": 10,\n        \"freeShipping\": true,\n        \"prestige\": \"***\"\n    },\n    {\n        \"productId\": 4,\n        \"name\": \"Chuteira\",\n        \"category\": \"Esportes\",\n        \"brand\": \"Adidas\",\n        \"price\": 235,\n        \"quantity\": 6,\n        \"freeShipping\": true,\n        \"prestige\": \"*****\"\n    },\n    {\n        \"productId\": 5,\n        \"name\": \"Mini Cama elastica\",\n        \"category\": \"Esportes\",\n        \"brand\": \"Starboard\",\n        \"price\": 183,\n        \"quantity\": 4,\n        \"freeShipping\": true,\n        \"prestige\": \"*****\"\n    },\n    {\n        \"productId\": 6,\n        \"name\": \"Camiseta\",\n        \"category\": \"Esportes\",\n        \"brand\": \"Topper\",\n        \"price\": 80,\n        \"quantity\": 2,\n        \"freeShipping\": false,\n        \"prestige\": \"***\"\n    },\n    {\n        \"productId\": 7,\n        \"name\": \"Redmi Note 9\",\n        \"category\": \"Celulares\",\n        \"brand\": \"Xiaomi\",\n        \"price\": 2800,\n        \"quantity\": 15,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 8,\n        \"name\": \"Smartwatch\",\n        \"category\": \"Celulares\",\n        \"brand\": \"Noga\",\n        \"price\": 1200,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"**\"\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"category\": \"Roupas\",\n        \"brand\": \"Fila\",\n        \"price\": 79,\n        \"quantity\": 2,\n        \"freeShipping\": false,\n        \"prestige\": \"***\"\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"category\": \"Roupas\",\n        \"brand\": \"Oakley\",\n        \"price\": 73,\n        \"quantity\": 6,\n        \"freeShipping\": false,\n        \"prestige\": \"***\"\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"category\": \"Roupas\",\n        \"brand\": \"Gonew\",\n        \"price\": 10,\n        \"quantity\": 8,\n        \"freeShipping\": false,\n        \"prestige\": \"*\"\n    },\n    {\n        \"productId\": 12,\n        \"name\": \"Shorts\",\n        \"category\": \"Roupas\",\n        \"brand\": \"Lacoste\",\n        \"price\": 275,\n        \"quantity\": 9,\n        \"freeShipping\": true,\n        \"prestige\": \"***\"\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 100,\n        \"quantity\": 7,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 100,\n        \"quantity\": 7,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 100,\n        \"quantity\": 7,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 100,\n        \"quantity\": 7,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 100,\n        \"quantity\": 7,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 100,\n        \"quantity\": 7,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 100,\n        \"quantity\": 7,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 100,\n        \"quantity\": 7,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 100,\n        \"quantity\": 7,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 100,\n        \"quantity\": 7,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 100,\n        \"quantity\": 7,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 100,\n        \"quantity\": 7,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 100,\n        \"quantity\": 7,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 100,\n        \"quantity\": 7,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 100,\n        \"quantity\": 7,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 14,\n        \"name\": \"Alicate do Lucas\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 100,\n        \"quantity\": 7,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 13,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 15,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 15,\n        \"name\": \"Martelo do Thor\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 1800,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 17,\n        \"name\": null,\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 17,\n        \"name\": \"Martel0 do Th0r\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 17,\n        \"name\": \"Martel0 do Th0r\",\n        \"category\": \"Fer\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 17,\n        \"name\": \"Martel0 do Th0r\",\n        \"category\": \"Fer\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 500000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 17,\n        \"name\": null,\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 5000,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 17,\n        \"name\": null,\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": null,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": null,\n        \"name\": null,\n        \"category\": null,\n        \"brand\": null,\n        \"price\": null,\n        \"quantity\": null,\n        \"freeShipping\": null,\n        \"prestige\": null\n    }\n]"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code 200\", () => {",
									"  pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "4xx",
					"item": [
						{
							"name": "[400] Atualização do registro de produto com path param inválido",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Serra de Bancada\",\n    \"category\": \"Ferramentas\",\n    \"brand\": \"FORTGPRO\",\n    \"price\": 1800.0,\n    \"quantity\": 5,\n    \"freeShipping\": true,\n    \"prestige\": \"****\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/articles/update-articles/:productId",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"update-articles",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "OjkD",
											"description": "Identificador do produto."
										}
									]
								}
							},
							"response": [
								{
									"name": "[400] Atualização do registro de produto com path param inválido",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Serra de Bancada\",\n    \"category\": \"Ferramentas\",\n    \"brand\": \"FORTGPRO\",\n    \"price\": 1800.0,\n    \"quantity\": 5,\n    \"freeShipping\": true,\n    \"prestige\": \"****\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/articles/update-articles/:productId",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles",
												"update-articles",
												":productId"
											],
											"variable": [
												{
													"key": "productId",
													"value": "OjkD",
													"description": "Identificador do produto."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 04:26:53 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2022-07-11T04:26:53.896+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"trace\": \"org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: \\\"OjkD\\\"\\n\\tat org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:684)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\nCaused by: java.lang.NumberFormatException: For input string: \\\"OjkD\\\"\\n\\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\\n\\tat java.base/java.lang.Long.parseLong(Long.java:692)\\n\\tat java.base/java.lang.Long.valueOf(Long.java:1144)\\n\\tat org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:214)\\n\\tat org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)\\n\\tat org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)\\n\\tat org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)\\n\\tat org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)\\n\\tat org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)\\n\\tat org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)\\n\\tat org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:729)\\n\\tat org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)\\n\\t... 47 more\\n\",\n    \"message\": \"Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: \\\"OjkD\\\"\",\n    \"path\": \"/api/v1/articles/update-articles/OjkD\"\n}"
								}
							]
						},
						{
							"name": "[400] Atualização do registro de produto com quantidade no formato não esperado",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Serra de Bancada\",\n    \"category\": \"Ferramentas\",\n    \"brand\": \"FORTGPRO\",\n    \"price\": 1800.0,\n    \"quantity\": \"5rsd\",\n    \"freeShipping\": true,\n    \"prestige\": \"****\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/articles/update-articles/:productId",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"update-articles",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "5",
											"description": "Identificador do produto."
										}
									]
								}
							},
							"response": [
								{
									"name": "[400] Atualização do registro de produto com quantidade no formato não esperado",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Serra de Bancada\",\n    \"category\": \"Ferramentas\",\n    \"brand\": \"FORTGPRO\",\n    \"price\": 1800.0,\n    \"quantity\": \"5rsd\",\n    \"freeShipping\": true,\n    \"prestige\": \"****\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/articles/update-articles/:productId",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles",
												"update-articles",
												":productId"
											],
											"variable": [
												{
													"key": "productId",
													"value": "5",
													"description": "Identificador do produto."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 04:28:48 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2022-07-11T04:28:48.680+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"trace\": \"org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.lang.Integer` from String \\\"5rsd\\\": not a valid `java.lang.Integer` value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Integer` from String \\\"5rsd\\\": not a valid `java.lang.Integer` value\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 6, column: 17] (through reference chain: com.github.transformeli.desafiospring.model.Product[\\\"quantity\\\"])\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:684)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\nCaused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Integer` from String \\\"5rsd\\\": not a valid `java.lang.Integer` value\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 6, column: 17] (through reference chain: com.github.transformeli.desafiospring.model.Product[\\\"quantity\\\"])\\n\\tat com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)\\n\\tat com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)\\n\\tat com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)\\n\\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseInteger(StdDeserializer.java:840)\\n\\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseInteger(StdDeserializer.java:820)\\n\\tat com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.deserialize(NumberDeserializers.java:531)\\n\\tat com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.deserialize(NumberDeserializers.java:506)\\n\\tat com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:391)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:184)\\n\\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)\\n\\t... 51 more\\n\",\n    \"message\": \"JSON parse error: Cannot deserialize value of type `java.lang.Integer` from String \\\"5rsd\\\": not a valid `java.lang.Integer` value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Integer` from String \\\"5rsd\\\": not a valid `java.lang.Integer` value\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 6, column: 17] (through reference chain: com.github.transformeli.desafiospring.model.Product[\\\"quantity\\\"])\",\n    \"path\": \"/api/v1/articles/update-articles/5\"\n}"
								}
							]
						},
						{
							"name": "[400] Atualização do registro de produto com erro de sintaxe no body",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Serra de Bancada\"\n    \"category\": \"Ferramentas\",\n    \"brand\": \"FORTGPRO\",\n    \"price\": 1800.0,\n    \"quantity\": 5,\n    \"freeShipping\": true,\n    \"prestige\": \"****\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/articles/update-articles/:productId",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"update-articles",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "10",
											"description": "Identificador do produto."
										}
									]
								}
							},
							"response": [
								{
									"name": "[400] Atualização do registro de produto com erro de sintaxe no body",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Serra de Bancada\"\n    \"category\": \"Ferramentas\",\n    \"brand\": \"FORTGPRO\",\n    \"price\": 1800.0,\n    \"quantity\": 5,\n    \"freeShipping\": true,\n    \"prestige\": \"****\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/articles/update-articles/:productId",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles",
												"update-articles",
												":productId"
											],
											"variable": [
												{
													"key": "productId",
													"value": "10",
													"description": "Identificador do produto."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 04:30:15 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2022-07-11T04:30:15.611+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"trace\": \"org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 3, column: 6]\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:684)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 3, column: 6]\\n\\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2391)\\n\\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:735)\\n\\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:659)\\n\\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(UTF8StreamJsonParser.java:1056)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:398)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:184)\\n\\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)\\n\\t... 51 more\\n\",\n    \"message\": \"JSON parse error: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 3, column: 6]\",\n    \"path\": \"/api/v1/articles/update-articles/10\"\n}"
								}
							]
						},
						{
							"name": "[404] Atualização do registro de produto com path param vazio",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Serra de Bancada\",\n    \"category\": \"Ferramentas\",\n    \"brand\": \"FORTGPRO\",\n    \"price\": 1800.0,\n    \"quantity\": 5,\n    \"freeShipping\": true,\n    \"prestige\": \"****\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/articles/update-articles/:productId",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"update-articles",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "",
											"description": "Identificador do produto."
										}
									]
								}
							},
							"response": [
								{
									"name": "[404] Atualização do registro de produto com path param vazio",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Serra de Bancada\",\n    \"category\": \"Ferramentas\",\n    \"brand\": \"FORTGPRO\",\n    \"price\": 1800.0,\n    \"quantity\": 5,\n    \"freeShipping\": true,\n    \"prestige\": \"****\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/articles/update-articles/:productId",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles",
												"update-articles",
												":productId"
											],
											"variable": [
												{
													"key": "productId",
													"value": "",
													"description": "Identificador do produto."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 04:27:46 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2022-07-11T04:27:46.009+00:00\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"message\": \"No message available\",\n    \"path\": \"/api/v1/articles/update-articles/\"\n}"
								}
							]
						},
						{
							"name": "[415] Atualização do registro de produto em formato não suportado",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Serra de Bancada\",\n    \"category\": \"Ferramentas\",\n    \"brand\": \"FORTGPRO\",\n    \"price\": 1800.0,\n    \"quantity\": 5,\n    \"freeShipping\": true,\n    \"prestige\": \"****\"\n}",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{API_URL}}/api/v1/articles/update-articles/:productId",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"update-articles",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "10",
											"description": "Identificador do produto."
										}
									]
								}
							},
							"response": [
								{
									"name": "[415] Atualização do registro de produto em formato não suportado",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Serra de Bancada\",\n    \"category\": \"Ferramentas\",\n    \"brand\": \"FORTGPRO\",\n    \"price\": 1800.0,\n    \"quantity\": 5,\n    \"freeShipping\": true,\n    \"prestige\": \"****\"\n}",
											"options": {
												"raw": {
													"language": "text"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/articles/update-articles/:productId",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"articles",
												"update-articles",
												":productId"
											],
											"variable": [
												{
													"key": "productId",
													"value": "10",
													"description": "Identificador do produto."
												}
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Accept",
											"value": "application/json, application/*+json"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 11 Jul 2022 04:32:00 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2022-07-11T04:32:00.697+00:00\",\n    \"status\": 415,\n    \"error\": \"Unsupported Media Type\",\n    \"trace\": \"org.springframework.web.HttpMediaTypeNotSupportedException: Content type 'text/plain;charset=UTF-8' not supported\\n\\tat org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:211)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:684)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\n\",\n    \"message\": \"Content type 'text/plain;charset=UTF-8' not supported\",\n    \"path\": \"/api/v1/articles/update-articles/10\"\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code 400, 404, 415\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([400, 404, 415]);",
									"});"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "EXTRA BONUS",
			"item": [
				{
					"name": "api/v1/clients",
					"item": [
						{
							"name": "api/v1/clients/state/{name}",
							"item": [
								{
									"name": "[200] Busca de clientes por estado via path param",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{API_URL}}/api/v1/clients/state/:stateName",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients",
												"state",
												":stateName"
											],
											"variable": [
												{
													"key": "stateName",
													"value": "Rio de Janeiro",
													"description": "Estado que o cliente reside. "
												}
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca de clientes por estado via path param",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{API_URL}}/api/v1/clients/state/:stateName",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients",
														"state",
														":stateName"
													],
													"variable": [
														{
															"key": "stateName",
															"value": "São Paulo",
															"description": "Estado que o cliente reside. "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 14:08:58 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"id\": 3,\n        \"name\": \"Evelyn Cristini Oliveira\",\n        \"state\": \"São Paulo\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 5,\n        \"name\": \"Daniele Silva\",\n        \"state\": \"São Paulo\",\n        \"country\": \"Brasil\"\n    }\n]"
										}
									]
								}
							]
						},
						{
							"name": "2xx",
							"item": [
								{
									"name": "[200] Busca de clientes",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[200] Busca de clientes",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 22:25:20 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"Alexandre Borges Souza\",\n        \"state\": \"Santa Catarina\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 2,\n        \"name\": \"Alexandre Borges Souza\",\n        \"state\": \"Santa Catarina\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 3,\n        \"name\": \"Evelyn Cristini Oliveira\",\n        \"state\": \"São Paulo\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 4,\n        \"name\": \"Luciana Azevedo\",\n        \"state\": \"I\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 5,\n        \"name\": \"Daniele Silva\",\n        \"state\": \"São Paulo\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 6,\n        \"name\": \"Luísa do Amaral\",\n        \"state\": \"SÃO PAULO\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 7,\n        \"name\": \"Amanda Cardoso\",\n        \"state\": \"SÃO PAULO\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 8,\n        \"name\": \"BOB DYLAN OLIVEIRA THROSSELL\",\n        \"state\": \"SÃO PAULO\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 9,\n        \"name\": \"José Carvalho\",\n        \"state\": \"SÃO PAULO\",\n        \"country\": \"brasil\"\n    },\n    {\n        \"id\": 10,\n        \"name\": \"Marcela Silva\",\n        \"state\": \"Santa Catarina\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 11,\n        \"name\": \"Mari*a Pereira4\",\n        \"state\": \"São Paulo\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 12,\n        \"name\": \"Gust*vo Oliveir4\",\n        \"state\": \"São Paulo\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 13,\n        \"name\": \"Dani*le Oliveir4\",\n        \"state\": \"São Paulo\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 14,\n        \"name\": \"Dani*le Oliveir4\",\n        \"state\": \"São Paulo\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 15,\n        \"name\": \"Dani*le Oliveir4 Souza\",\n        \"state\": \"São Paulo\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 16,\n        \"name\": \"Elisa dos Santos\",\n        \"state\": \"S*0 P#ul0\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 17,\n        \"name\": \"Elisa dos Santos\",\n        \"state\": \"S*0 P#ul0\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 18,\n        \"name\": \"Elisa dos Santos\",\n        \"state\": \"S*0 P#ul0\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 19,\n        \"name\": \"Elisa dos Santos\",\n        \"state\": \"S*0 P#ul0\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 20,\n        \"name\": \"Elisa dos Santos\",\n        \"state\": \"S*0 P#ul0\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 21,\n        \"name\": \"Elisa dos Santos\",\n        \"state\": \"S*0 P#ul0\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 22,\n        \"name\": \"Elisa dos Santos\",\n        \"state\": \"S*0 P#ul0\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 23,\n        \"name\": \"Elisa dos Santos\",\n        \"state\": \"S*0 P#ul0\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 24,\n        \"name\": \"Alex George\",\n        \"state\": \"S*0 P#ul0\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 25,\n        \"name\": \"Maria Aparecida Pereira Oliveira\",\n        \"state\": \"S*0 P#ul0\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 26,\n        \"name\": \"Maria Aparecida Pereira Oliveira\",\n        \"state\": \"S*0 P#ul0\",\n        \"country\": \"Brasil\"\n    },\n    {\n        \"id\": 27,\n        \"name\": \"Clifford Knight\",\n        \"state\": \"S&0 P4ul0\",\n        \"country\": \"Brasil\"\n    }\n]"
										}
									]
								},
								{
									"name": "[201] Envio de dados do cliente",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\":36,\n    \"name\":\"Daniele Oliveira\",\n    \"cpf\":\"12545678922\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[201] Envio de dados do cliente",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\":31,\n    \"name\":\"Daniele Oliveira\",\n    \"cpf\":\"12545678912\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 22:26:22 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 28,\n    \"name\": \"Daniele Oliveira\",\n    \"state\": \"São Paulo\",\n    \"country\": \"Brasil\"\n}"
										}
									]
								},
								{
									"name": "[201] Envio de dados do cliente com nome em upper case",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\":30,\n    \"name\": \"BOB DYLAN THROSSELL\",\n    \"cpf\":\"70002867639\",\n    \"state\":\"SÃO PAULO\",\n    \"country\":\"Brasil\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[201] Envio de dados do cliente com nome em upper case",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\":30,\n    \"name\": \"BOB DYLAN THROSSELL\",\n    \"cpf\":\"70002867639\",\n    \"state\":\"SÃO PAULO\",\n    \"country\":\"Brasil\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 22:28:13 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 30,\n    \"name\": \"BOB DYLAN THROSSELL\",\n    \"state\": \"SÃO PAULO\",\n    \"country\": \"Brasil\"\n}"
										}
									]
								},
								{
									"name": "[201] Envio de dados do cliente com estado em upper case",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\":33,\n    \"name\": \"Amanda Cardoso\",\n    \"cpf\":\"43002866839\",\n    \"state\":\"SÃO PAULO\",\n    \"country\":\"Brasil\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[201] Envio de dados do cliente com estado em upper case",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\":33,\n    \"name\": \"Amanda Cardoso\",\n    \"cpf\":\"43002866839\",\n    \"state\":\"SÃO PAULO\",\n    \"country\":\"Brasil\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 22:28:48 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 31,\n    \"name\": \"Amanda Cardoso\",\n    \"state\": \"SÃO PAULO\",\n    \"country\": \"Brasil\"\n}"
										}
									]
								},
								{
									"name": "[201] Envio de dados do cliente com país em lower case",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\":32,\n    \"name\": \"José Souza\",\n    \"cpf\":\"49002842820\",\n    \"state\":\"SÃO PAULO\",\n    \"country\":\"brasil\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[201] Envio de dados do cliente com país em lower case",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\":32,\n    \"name\": \"José Souza\",\n    \"cpf\":\"49002842820\",\n    \"state\":\"SÃO PAULO\",\n    \"country\":\"brasil\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 22:29:24 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 32,\n    \"name\": \"José Souza\",\n    \"state\": \"SÃO PAULO\",\n    \"country\": \"brasil\"\n}"
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code 200 ou 201\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
											"});",
											""
										]
									}
								}
							]
						},
						{
							"name": "4xx",
							"item": [
								{
									"name": "[404] Busca de clientes em rota inválida",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/client",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"client"
											]
										}
									},
									"response": [
										{
											"name": "[404] Busca de clientes em rota inválida",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/client",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"client"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Method"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Headers"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sat, 09 Jul 2022 15:45:03 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"timestamp\": \"2022-07-09T15:45:03.741+00:00\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"message\": \"No message available\",\n    \"path\": \"/api/v1/client\"\n}"
										}
									]
								},
								{
									"name": "[404] Busca de clientes em rota inválida com path param",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/client/:clientId",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"client",
												":clientId"
											],
											"variable": [
												{
													"key": "clientId",
													"value": "2",
													"description": "Identificador do cliente. "
												}
											]
										}
									},
									"response": [
										{
											"name": "[404] Busca de clientes em rota inválida com path param",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/client/:clientId",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"client",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "2",
															"description": "Identificador do cliente. "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Method"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Headers"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 13:55:22 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"timestamp\": \"2022-07-10T13:55:22.086+00:00\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"message\": \"No message available\",\n    \"path\": \"/api/v1/client/2\"\n}"
										}
									]
								},
								{
									"name": "[400] Envio de dados do cliente com caracteres especiais no nome",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\":33,\n    \"name\":\"Dani*le Oliveir4 Souza da Luz\",\n    \"cpf\":\"35958535350\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[400] Envio de dados do cliente com caracteres especiais no nome",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\":33,\n    \"name\":\"Dani*le Oliveir4 Souza da Luz\",\n    \"cpf\":\"35958535350\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 22:29:57 GMT"
												},
												{
													"key": "Connection",
													"value": "close"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Bad Request\",\n    \"status\": 400,\n    \"message\": \"Client name is not valid. Client name can contain only uppercase and lowercase letters\",\n    \"timestamp\": \"2022-07-10T19:29:57.966766\"\n}"
										}
									]
								},
								{
									"name": "[400] Envio de dados do cliente com letras e caracteres especiais no CPF",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\":33,\n    \"name\":\"Elisa dos Santos\",\n    \"cpf\":\"4a2#356789*9\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[400] Envio de dados do cliente com letras e caracteres especiais no CPF",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\":33,\n    \"name\":\"Elisa dos Santos\",\n    \"cpf\":\"4a2#356789*9\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 22:30:51 GMT"
												},
												{
													"key": "Connection",
													"value": "close"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Bad Request\",\n    \"status\": 400,\n    \"message\": \"Client CPF is not valid. CPF:423567899\",\n    \"timestamp\": \"2022-07-10T19:30:51.669625\"\n}"
										}
									]
								},
								{
									"name": "[400] Envio de dados do cliente com ID em formato incorreto",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\":\"aA\",\n    \"name\":\"Jean Lucca\",\n    \"cpf\":\"45645645645\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[400] Envio de dados do cliente com ID em formato incorreto",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\":\"aA\",\n    \"name\":\"Jean Lucca\",\n    \"cpf\":\"45645645645\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 16:31:19 GMT"
												},
												{
													"key": "Connection",
													"value": "close"
												}
											],
											"cookie": [],
											"body": "{\n    \"timestamp\": \"2022-07-10T16:31:19.127+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"trace\": \"org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.lang.Integer` from String \\\"aA\\\": not a valid `java.lang.Integer` value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Integer` from String \\\"aA\\\": not a valid `java.lang.Integer` value\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 2, column: 10] (through reference chain: com.github.transformeli.desafiospring.model.Client[\\\"id\\\"])\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\nCaused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Integer` from String \\\"aA\\\": not a valid `java.lang.Integer` value\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 2, column: 10] (through reference chain: com.github.transformeli.desafiospring.model.Client[\\\"id\\\"])\\n\\tat com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)\\n\\tat com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)\\n\\tat com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)\\n\\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseInteger(StdDeserializer.java:840)\\n\\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseInteger(StdDeserializer.java:820)\\n\\tat com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.deserialize(NumberDeserializers.java:531)\\n\\tat com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.deserialize(NumberDeserializers.java:506)\\n\\tat com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:391)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:184)\\n\\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)\\n\\t... 51 more\\n\",\n    \"message\": \"JSON parse error: Cannot deserialize value of type `java.lang.Integer` from String \\\"aA\\\": not a valid `java.lang.Integer` value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Integer` from String \\\"aA\\\": not a valid `java.lang.Integer` value\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 2, column: 10] (through reference chain: com.github.transformeli.desafiospring.model.Client[\\\"id\\\"])\",\n    \"path\": \"/api/v1/clients\"\n}"
										}
									]
								},
								{
									"name": "[400] Envio de dados do cliente com body incorreto",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\":7,\n    \"name\":\"Evelyn Cristini Oliveira\",\n    \"cpf\":\"12345678912\",\n    \"state\":\"São Paulo\"\n    \"country\":\"Brasil\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[400] Envio de dados do cliente com body incorreto",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\":7,\n    \"name\":\"Evelyn Cristini Oliveira\",\n    \"cpf\":\"12345678912\",\n    \"state\":\"São Paulo\"\n    \"country\":\"Brasil\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sat, 09 Jul 2022 14:38:07 GMT"
												},
												{
													"key": "Connection",
													"value": "close"
												}
											],
											"cookie": [],
											"body": "{\n    \"timestamp\": \"2022-07-09T14:38:07.406+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"trace\": \"org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 6, column: 6]\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 6, column: 6]\\n\\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2391)\\n\\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:735)\\n\\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:659)\\n\\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(UTF8StreamJsonParser.java:1056)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:398)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:184)\\n\\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)\\n\\t... 51 more\\n\",\n    \"message\": \"JSON parse error: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('\\\"' (code 34)): was expecting comma to separate Object entries\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 6, column: 6]\",\n    \"path\": \"/api/v1/clients\"\n}"
										}
									]
								},
								{
									"name": "[400] Envio de dados do cliente com sintaxe do body incorreta",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\":7,\n    \"name\":\"Evelyn Cristini Oliveira\",\n    cpf:\"12345678912\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[400] Envio de dados do cliente com sintaxe do body incorreta",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\":7,\n    \"name\":\"Evelyn Cristini Oliveira\",\n    cpf:\"12345678912\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 15:14:10 GMT"
												},
												{
													"key": "Connection",
													"value": "close"
												}
											],
											"cookie": [],
											"body": "{\n    \"timestamp\": \"2022-07-10T15:14:10.437+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"trace\": \"org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('c' (code 99)): was expecting double-quote to start field name; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('c' (code 99)): was expecting double-quote to start field name\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 4, column: 6]\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unexpected character ('c' (code 99)): was expecting double-quote to start field name\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 4, column: 6]\\n\\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2391)\\n\\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:735)\\n\\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:659)\\n\\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleOddName(UTF8StreamJsonParser.java:2096)\\n\\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseName(UTF8StreamJsonParser.java:1746)\\n\\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(UTF8StreamJsonParser.java:1075)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:398)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:184)\\n\\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)\\n\\tat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)\\n\\t... 51 more\\n\",\n    \"message\": \"JSON parse error: Unexpected character ('c' (code 99)): was expecting double-quote to start field name; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('c' (code 99)): was expecting double-quote to start field name\\n at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 4, column: 6]\",\n    \"path\": \"/api/v1/clients\"\n}"
										}
									]
								},
								{
									"name": "[400] Envio de dados do cliente sem body",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[400] Envio de dados do cliente sem body",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sat, 09 Jul 2022 14:47:45 GMT"
												},
												{
													"key": "Connection",
													"value": "close"
												}
											],
											"cookie": [],
											"body": "{\n    \"timestamp\": \"2022-07-09T14:47:45.151+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"trace\": \"org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public org.springframework.http.ResponseEntity<com.github.transformeli.desafiospring.dto.ClientDTO> com.github.transformeli.desafiospring.controller.ClientController.createClient(com.github.transformeli.desafiospring.model.Client)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\n\",\n    \"message\": \"Required request body is missing: public org.springframework.http.ResponseEntity<com.github.transformeli.desafiospring.dto.ClientDTO> com.github.transformeli.desafiospring.controller.ClientController.createClient(com.github.transformeli.desafiospring.model.Client)\",\n    \"path\": \"/api/v1/clients\"\n}"
										}
									]
								},
								{
									"name": "[400] Envio de dados do cliente com caracteres insuficientes no CPF",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\":5,\n    \"name\": \"Luciana Azevedo\",\n    \"cpf\":\"430126\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[400] Envio de dados do cliente com caracteres insuficientes no CPF",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\":5,\n    \"name\": \"Luciana Azevedo\",\n    \"cpf\":\"430126\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 22:41:37 GMT"
												},
												{
													"key": "Connection",
													"value": "close"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Bad Request\",\n    \"status\": 400,\n    \"message\": \"Client CPF is not valid. CPF:430126\",\n    \"timestamp\": \"2022-07-10T19:41:37.28418\"\n}"
										}
									]
								},
								{
									"name": "[400] Envio de dados do cliente com números adicionais no CPF",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\":11,\n    \"name\": \"Amanda Queiróz\",\n    \"cpf\":\"4301269879876\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[400] Envio de dados do cliente com números adicionais no CPF",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\":11,\n    \"name\": \"Amanda Queiróz\",\n    \"cpf\":\"4301269879876\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 22:42:18 GMT"
												},
												{
													"key": "Connection",
													"value": "close"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Bad Request\",\n    \"status\": 400,\n    \"message\": \"Client CPF is not valid. CPF:4301269879876\",\n    \"timestamp\": \"2022-07-10T19:42:18.435484\"\n}"
										}
									]
								},
								{
									"name": "[404] Envio de dados do cliente em rota inválida",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\":3,\n    \"name\":\"Evelyn Cristini Oliveira\",\n    \"cpf\":\"12345678912\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/client",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"client"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"name": "[404] Envio de dados do cliente em rota inválida",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\":3,\n    \"name\":\"Evelyn Cristini Oliveira\",\n    \"cpf\":\"12345678912\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/client",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"client"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Method"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Headers"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sat, 09 Jul 2022 14:56:50 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"timestamp\": \"2022-07-09T14:56:50.557+00:00\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"message\": \"No message available\",\n    \"path\": \"/api/v1/client\"\n}"
										}
									]
								},
								{
									"name": "[406] Envio de dados do cliente sobreescrito",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\":10,\n    \"name\":\"Marcela Silva\",\n    \"cpf\":\"02059893230\",\n    \"state\":\"Santa Catarina\",\n    \"country\":\"Brasil\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[406] Envio de dados do cliente sobreescrito",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\":10,\n    \"name\":\"Marcela Silva\",\n    \"cpf\":\"02059893230\",\n    \"state\":\"Santa Catarina\",\n    \"country\":\"Brasil\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 15:24:14 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Client Already Exists\",\n    \"status\": 406,\n    \"message\": \"Client create request (02059893230) already exists.\",\n    \"timestamp\": \"2022-07-10T12:24:14.049805\"\n}"
										}
									]
								},
								{
									"name": "[406] Envio de dados do cliente novo com valor de ID persistido",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\":1,\n    \"name\":\"Daniele Silva\",\n    \"cpf\":\"78698543809\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[406] Envio de dados do cliente novo com valor de ID persistido",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\":1,\n    \"name\":\"Daniele Silva\",\n    \"cpf\":\"78698543809\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sat, 09 Jul 2022 14:53:41 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 5,\n    \"name\": \"Daniele Silva\",\n    \"state\": \"São Paulo\",\n    \"country\": \"Brasil\"\n}"
										}
									]
								},
								{
									"name": "[406] Envio de dados do cliente com caracteres especiais no CPF",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Marcela Silva\",\n    \"cpf\": \"020.598.932-30\",\n    \"state\": \"Santa Catarina\",\n    \"country\": \"Brasil\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[406] Envio de dados do cliente com caracteres especiais no CPF",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Marcela Silva\",\n    \"cpf\": \"020.598.932-30\",\n    \"state\": \"Santa Catarina\",\n    \"country\": \"Brasil\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sun, 10 Jul 2022 15:18:10 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 10,\n    \"name\": \"Marcela Silva\",\n    \"state\": \"Santa Catarina\",\n    \"country\": \"Brasil\"\n}"
										}
									]
								},
								{
									"name": "[406] Envio de dados do cliente com nome vazio",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\":4,\n    \"name\": \"\",\n    \"cpf\":\"73034578901\",\n    \"state\":\"Rio de Janeiro\",\n    \"country\":\"Brasil\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[406] Envio de dados do cliente com nome vazio",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\":4,\n    \"name\": \"\",\n    \"cpf\":\"73034578901\",\n    \"state\":\"Rio de Janeiro\",\n    \"country\":\"Brasil\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sat, 09 Jul 2022 13:54:00 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Client param error\",\n    \"status\": 406,\n    \"message\": \"Client name is required\",\n    \"timestamp\": \"2022-07-09T10:54:00.733834\"\n}"
										}
									]
								},
								{
									"name": "[406] Envio de dados do cliente com nome com caracteres insuficientes",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\":34,\n    \"name\": \"Lu\",\n    \"cpf\":\"13423423489\",\n    \"state\":\"Rio de Janeiro\",\n    \"country\":\"Brasil\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[406] Envio de dados do cliente com nome com caracteres insuficientes",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\":4,\n    \"name\": \"Lu\",\n    \"cpf\":\"23423423489\",\n    \"state\":\"Rio de Janeiro\",\n    \"country\":\"Brasil\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sat, 09 Jul 2022 14:08:20 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Client param error\",\n    \"status\": 406,\n    \"message\": \"Client requires full name\",\n    \"timestamp\": \"2022-07-09T11:08:20.381662\"\n}"
										}
									]
								},
								{
									"name": "[406] Envio de dados do cliente com país não informado",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\":35,\n    \"name\": \"Luciana Azevedo\",\n    \"cpf\":\"43028698700\",\n    \"state\":\"Rio Grande do Sul\",\n    \"country\":\"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[406] Envio de dados do cliente com país não informado",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\":5,\n    \"name\": \"Luciana Azevedo\",\n    \"cpf\":\"43028698709\",\n    \"state\":\"Rio Grande do Sul\",\n    \"country\":\"\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sat, 09 Jul 2022 14:15:24 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Client param error\",\n    \"status\": 406,\n    \"message\": \"Client country is required\",\n    \"timestamp\": \"2022-07-09T11:15:24.345372\"\n}"
										}
									]
								},
								{
									"name": "[406] Envio de dados do cliente com estado não informado",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\":35,\n    \"name\": \"Luciana Azevedo\",\n    \"cpf\":\"43028698709\",\n    \"state\":\"\",\n    \"country\":\"Brasil\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[406] Envio de dados do cliente com estado não informado",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\":5,\n    \"name\": \"Luciana Azevedo\",\n    \"cpf\":\"43028698709\",\n    \"state\":\"\",\n    \"country\":\"Brasil\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sat, 09 Jul 2022 14:20:35 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Client param error\",\n    \"status\": 406,\n    \"message\": \"Client state is required\",\n    \"timestamp\": \"2022-07-09T11:20:35.909368\"\n}"
										}
									]
								},
								{
									"name": "[406] Envio de dados do cliente repetido com valor de ID diferente",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\":35,\n    \"name\":\"Evelyn Cristini Oliveira\",\n    \"cpf\":\"12345678912\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[406] Envio de dados do cliente repetido com valor de ID diferente",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\":10,\n    \"name\":\"Evelyn Cristini Oliveira\",\n    \"cpf\":\"12345678912\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sat, 09 Jul 2022 14:51:13 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Client Already Exists\",\n    \"status\": 406,\n    \"message\": \"Client create request (12345678912) already exists.\",\n    \"timestamp\": \"2022-07-09T11:51:13.111079\"\n}"
										}
									]
								},
								{
									"name": "[406] Envio de dados do cliente com CPF não informado",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\":5,\n    \"name\": \"Luciana Azevedo\",\n    \"cpf\":\"\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[406] Envio de dados do cliente com CPF não informado",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\":5,\n    \"name\": \"Luciana Azevedo\",\n    \"cpf\":\"\",\n    \"state\":\"São Paulo\",\n    \"country\":\"Brasil\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sat, 09 Jul 2022 14:24:27 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"title\": \"Client param error\",\n    \"status\": 406,\n    \"message\": \"Client CPF is required\",\n    \"timestamp\": \"2022-07-09T11:24:27.344232\"\n}"
										}
									]
								},
								{
									"name": "[415] Envio de dados do cliente em formato não esperado",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "id",
													"value": "3",
													"description": "Identicador do cliente. ",
													"type": "text"
												},
												{
													"key": "name",
													"value": "Evelyn Cristini Oliveira",
													"description": "Nome do cliente. ",
													"type": "text"
												},
												{
													"key": "cpf",
													"value": "12345678912",
													"description": "CPF do cliente. ",
													"type": "text"
												},
												{
													"key": "state",
													"value": "São Paulo",
													"description": "Estado onde o cliente reside. ",
													"type": "text"
												},
												{
													"key": "country",
													"value": "Brasil",
													"description": "País onde o cliente reside.",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[415] Envio de dados do cliente em formato não esperado",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "id",
															"value": "3",
															"description": "Identicador do cliente. ",
															"type": "text"
														},
														{
															"key": "name",
															"value": "Evelyn Cristini Oliveira",
															"description": "Nome do cliente. ",
															"type": "text"
														},
														{
															"key": "cpf",
															"value": "12345678912",
															"description": "CPF do cliente. ",
															"type": "text"
														},
														{
															"key": "state",
															"value": "São Paulo",
															"description": "Estado onde o cliente reside. ",
															"type": "text"
														},
														{
															"key": "country",
															"value": "Brasil",
															"description": "País onde o cliente reside.",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "Unsupported Media Type",
											"code": 415,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Accept",
													"value": "application/json, application/*+json"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sat, 09 Jul 2022 15:54:39 GMT"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=60"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"timestamp\": \"2022-07-09T15:54:39.505+00:00\",\n    \"status\": 415,\n    \"error\": \"Unsupported Media Type\",\n    \"trace\": \"org.springframework.web.HttpMediaTypeNotSupportedException: Content type 'application/x-www-form-urlencoded;charset=UTF-8' not supported\\n\\tat org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:211)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\n\",\n    \"message\": \"Content type 'application/x-www-form-urlencoded;charset=UTF-8' not supported\",\n    \"path\": \"/api/v1/clients\"\n}"
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code 400, 404, 406, 415\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([400, 404, 406, 415]);",
											"});"
										]
									}
								}
							]
						},
						{
							"name": "5xx",
							"item": [
								{
									"name": "[500] Envio de dados do cliente com o body vazio",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_URL}}/api/v1/clients",
											"host": [
												"{{API_URL}}"
											],
											"path": [
												"api",
												"v1",
												"clients"
											]
										}
									},
									"response": [
										{
											"name": "[500] Envio de dados do cliente com o body vazio",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{API_URL}}/api/v1/clients",
													"host": [
														"{{API_URL}}"
													],
													"path": [
														"api",
														"v1",
														"clients"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Sat, 09 Jul 2022 14:45:59 GMT"
												},
												{
													"key": "Connection",
													"value": "close"
												}
											],
											"cookie": [],
											"body": "{\n    \"timestamp\": \"2022-07-09T14:45:59.275+00:00\",\n    \"status\": 500,\n    \"error\": \"Internal Server Error\",\n    \"trace\": \"java.lang.NullPointerException\\n\\tat com.github.transformeli.desafiospring.helper.CPFDocument.getNumberOnlyCPF(CPFDocument.java:15)\\n\\tat com.github.transformeli.desafiospring.service.ClientService.validateAddNewClient(ClientService.java:62)\\n\\tat com.github.transformeli.desafiospring.service.ClientService.saveClient(ClientService.java:53)\\n\\tat com.github.transformeli.desafiospring.controller.ClientController.createClient(ClientController.java:36)\\n\\tat jdk.internal.reflect.GeneratedMethodAccessor37.invoke(Unknown Source)\\n\\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:829)\\n\",\n    \"message\": \"No message available\",\n    \"path\": \"/api/v1/clients\"\n}"
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code 500\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([500]);",
											"});"
										]
									}
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Verificação de body do response\", function() {",
					"    pm.response.to.be.withBody;",
					"})",
					"",
					"pm.test(\"Content-Type de resposta está no formato application/json\", () => {",
					"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
					"});",
					"",
					"pm.test(\"Tempo de resposta inferior a 200ms\", () => {",
					"  pm.expect(pm.response.responseTime).to.be.below(200);",
					"});",
					"",
					"pm.test(\"Lista de verificação de opções válidas de conteúdo de retorno\", () => {",
					"  pm.expect(pm.response.json().type)",
					"    .to.be.oneOf([Array[Object], \"productId\", \"name\", \"name\", \"title\", \"status\", \"message\", \"timestamp\", \"id\", \"name\", \"state\", \"country\"]);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "API_URL",
			"value": "127.0.0.1:8080",
			"type": "string"
		}
	]
}